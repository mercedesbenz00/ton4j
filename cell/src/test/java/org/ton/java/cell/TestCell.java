package org.ton.java.cell;

import lombok.extern.slf4j.Slf4j;
import org.apache.commons.codec.binary.Hex;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.ton.java.address.Address;
import org.ton.java.utils.Utils;

import static org.assertj.core.api.Assertions.assertThat;

@Slf4j
@RunWith(JUnit4.class)
public class TestCell {

    @Test
    public void testCellUints() {
        Cell c2 = new Cell();
        c2.bits.writeUint(42, 7);

        log.info(c2.print());
        log.info(Utils.bytesToHex(c2.toBoc(false)));

        assertThat(c2.bits.toHex()).isEqualTo("55_");
        assertThat(Utils.bytesToHex(c2.toBoc(false))).isEqualTo("b5ee9c72410101010003000001558501ef11");

        log.info("");
        Cell c3 = new Cell();
        c3.bits.writeUint(73, 255);

        log.info(c3.print());
        log.info(Utils.bytesToHex(c3.toBoc(false)));
        assertThat(c3.bits.toHex()).isEqualTo("0000000000000000000000000000000000000000000000000000000000000093_");
        assertThat(Utils.bytesToHex(c3.toBoc(false)).toUpperCase()).isEqualTo("B5EE9C7241010101002200003F000000000000000000000000000000000000000000000000000000000000009352A2F27C");

        log.info("");

        Cell c1 = new Cell();
        c1.bits.writeUint8(0);
        c1.refs.add(c2);
        c1.refs.add(c3);

        log.info(c1.print());
        log.info(Utils.bytesToHex(c1.toBoc(false)));

        assertThat(Utils.bytesToHex(c1.toBoc(false)).toUpperCase()).isEqualTo("B5EE9C7241010301002A000202000102000155003F0000000000000000000000000000000000000000000000000000000000000093355B1411");
    }

    @Test
    public void testBocDeserialization0() {
        Cell c0 = new Cell();
        c0.bits.writeUint(73, 255);
        assertThat(c0.bits.toHex()).isEqualTo("0000000000000000000000000000000000000000000000000000000000000093_");
        assertThat(c0.bits.toHex()).isEqualTo("0000000000000000000000000000000000000000000000000000000000000093_");

        Cell c1 = new Cell();
        Cell c2 = new Cell();
        Cell c3 = new Cell();
        Cell c4 = new Cell();

        long l1 = (long) Math.pow(2, 25);
        long l2 = (long) Math.pow(2, 37);
        long l3 = (long) Math.pow(2, 41);
        long l4 = (long) Math.pow(2, 42);

        c1.bits.writeUint(l1, 26);
        c2.bits.writeUint(l2, 38);
        c3.bits.writeUint(l3, 42);
        c4.bits.writeUint(l4, 44);

        assertThat(c1.bits.toHex()).isEqualTo("8000002_");
        assertThat(c2.bits.toHex()).isEqualTo("8000000002_");
        assertThat(c3.bits.toHex()).isEqualTo("80000000002_");
        assertThat(c4.bits.toHex()).isEqualTo("40000000000");
    }

    @Test
    public void testBocDeserialization1() {
        Cell c1 = new Cell();

        long l1 = (long) Math.pow(2, 25);
        c1.bits.writeUint(l1, 26);
        log.info("c1 bitString  {}", c1.bits.toBitString());
        log.info("c1 hex        {}", c1.bits.toHex());
        assertThat(c1.bits.toHex()).isEqualTo("8000002_");

        byte[] serializedCell1 = c1.toBoc(false);
        Cell dc1 = Cell.fromBoc(serializedCell1);
        log.info("dc1 bitString {}", dc1.bits.toBitString());
        log.info("dc1 hex       {}", dc1.bits.toHex());

        assertThat(dc1.bits.toHex()).isEqualTo("8000002_");
    }

    @Test
    public void testBocDeserialization() {
        Cell c1 = new Cell();
        Cell c2 = new Cell();
        Cell c3 = new Cell();
        Cell c4 = new Cell();
        Cell c5 = new Cell();

        c1.bits.writeUint((long) Math.pow(2, 25), 26);
        c2.bits.writeUint((long) Math.pow(2, 37), 38);
        c3.bits.writeUint((long) Math.pow(2, 41), 42);
        c4.bits.writeUint((long) Math.pow(2, 42), 44);
        c5.bits.writeAddress(Address.parseFriendlyAddress("0QAljlSWOKaYCuXTx2OCr9P08y40SC2vw3UeM1hYnI3gDY7I"));
        c5.bits.writeString("HELLO");

        log.info("c1 " + c1.bits);
        log.info("c2 " + c2.bits);
        log.info("c3 " + c3.bits);
        log.info("c4 " + c4.bits);
        log.info("c5 " + c5.bits);

        assertThat(c1.bits.toHex()).isEqualTo("8000002_");

        c3.refs.add(c5);
        c2.refs.add(c3);
        c1.refs.add(c2);
        c1.refs.add(c4);

        log.info("c1 serialized");
        log.info(c1.print());
        log.info("c1 hex: {}", Utils.bytesToHex(c1.toBoc(false)));

        byte[] serializedCell1 = c1.toBoc(false);

        Cell dc1 = Cell.fromBoc(serializedCell1);
        log.info("c1 deserialized");
        log.info(dc1.print());
        log.info("dc1 hex: {}", Utils.bytesToHex(dc1.toBoc(false)));

        assertThat(dc1.bits.toString()).isEqualTo(c1.bits.toString());
        assertThat(dc1.refs.get(0).bits.toString()).isEqualTo(c2.bits.toString());
        assertThat(dc1.refs.get(1).bits.toString()).isEqualTo(c4.bits.toString());
        assertThat(dc1.refs.get(0).refs.get(0).bits.toString()).isEqualTo(c3.bits.toString());
        assertThat(dc1.refs.get(0).refs.get(0).refs.get(0).bits.toString()).isEqualTo(c5.bits.toString());
    }

    /**
     * <a href="https://github.com/toncenter/tonweb/issues/70">issue 70</a>
     */
    @Test
    public void testBocDeserializationIssue70() {
        String base64boc = "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";

        byte[] rawBoc1 = Utils.base64ToBytes(base64boc);
        log.info("rawBoc {}, length {}", rawBoc1, rawBoc1.length);
        log.info("hex1: {}", Hex.encodeHexString(rawBoc1));

        //FileUtils.writeByteArrayToFile(new File("sample.boc"), rawBoc);

        //deserialize
        Cell c1 = Cell.fromBoc(rawBoc1);

        log.info(c1.print());

        byte[] rawBoc2 = c1.toBoc(false);
        log.info("rawBoc2 {}, length {}", rawBoc2, rawBoc2.length);
        log.info("hex2: {}", Hex.encodeHexString(rawBoc2));
        log.info(Utils.bytesToBase64(rawBoc2));

        //serialize
        Cell c2 = Cell.fromBoc(rawBoc2);
        log.info(c2.print());
//        assertThat(Hex.encodeHexString(rawBoc1)).isEqualTo(Hex.encodeHexString(rawBoc2)); // TODO
        assertThat(c1.print()).isEqualTo(c2.print());
    }

    @Test
    public void testBocDeserializationBackAndForth() {
        Cell cell = Cell.fromBoc("B5EE9C7241010301002A000202000102000155003F0000000000000000000000000000000000000000000000000000000000000093355B1411");
        log.info(cell.print());
        log.info(Utils.bytesToHex(cell.toBoc(false)));
    }

    /**
     * <a href="https://github.com/toncenter/tonweb/issues/74">issue 75</a> - TODO - deserialization fails with "Incorrect TopUppedArray"
     */
    @Test
    public void testBocIssue74() {
//        Cell cell = Cell.fromBoc("");
//        log.info(cell.print());
//        log.info(Utils.bytesToHex(cell.toBoc(true)));
    }

    private static final String BOC_FIFT_HEX_LARGE = "b5ee9c7201023201000498000114ff00f4a413f4bcf2c80b0102012002030201480405000cf2308048f2f00202cb0607020120282902012008090201ce26270201200a0b02012017180201200c0d02012011120201200e0f00215fa4001fa46804602c00012f2f4d3ff30801ed20120871c03cbc807434c0c05c6c2497c0f83c00cc4074c7dc208061a808f00023858cc074c7e01200a0841b5a5b9d2e84bcbd2082c63cd865d6f4cffe801400f880fe0048840d10015bc13e186084100d28f014842ea4cc3c033820842296cbb9d4842ea4cc3c03782082c63cd854842ea4cc3c03f82010001134c1c06a80b5c6006000588210982535785210ba9330f00ee08210b766741a5210ba9330f011e0821025d53dfdba92f010e0308048f2f002012013140201201516001d1c081cb232c072c032c1f2fff274200023104cfd039be8482540b5c04c00780c5c0ca0003d1c20043232c1417c010573c5893e808532da84b2c7f2cff3c4f260103ec020003d1c20043232c141bc0105b3c594013e808532dab2c7c4b2cff3c4f25c7ec020020120191a0201201f200201201b1c0201201d1e001d0060c1fd039be864fe800c380c1c20003b20128870403cbc8830802672007e8080a0c1fd10e5cc0060c1fd16cc38a000193b51343e803d013d0135350c20001f3214017e8084fd003d003333327b55200201202122020120232400ed3e105bc90c0c40b4fff4c7fe803d01347c0288e0080a60c1fc016011c07cbd2011d4c6eebcbd14cc3c0214d2bc020af232ffd5082e20083d10c06951543c0241291509243c025004fc02e084260abfffc97232ffd49032c7d4883d00095110d4a17c01e0840c19b443c0f232ffc4b2c7fd00104c3c01a000e33e105bc90c0c40b4fff4c7fe803d01347c02887434ffcc20125446eebcbd08e0080a60c1fc014c6011c07cbc94ca3c020a7232ffd50825a0083d10c1291508e43c0240bc02e0840d2212a4497232ffd49032c7d4883d00095110d4a17c01e0841c04df21c0f232ffc4b2c7fd00104c3c01a000793e105bc90c0c40b53d01347b5134350c3434ffcc201254c52ebcbd08b434ffcc201200aebcbd3c028c54943c02e0843218aeaf40b2333d00104c3c01a001f73e105bc90c80fd01347c02b434c03e8034c7f4c7fd010c2012c97cbd2012d4e4ae7cbd2012d4e4ee7cbd20134920840ee6b2802814032ec6fcbd3e097e0554c1e8483e0454c2e0083d039be864f4c7cc248c083880a94b20083d039be865900720083d05a74c083232c7f274100720083d05b882a9013232c01400e0250038fa02cb1fcb1f17f400c9f00b82101a69387e02c8cb1ff4004130f00600513e105bc90c0c40bd01347b5134350c3434ffcc20125444eebcbd20840764eab600723d00104c3c01a0005b3e105bc90c0c40b53d01347b5134350c3434ffcc201254452ebcbd087ec120841ca368e840b2333d00104c3c01a00201202a2b02012030310017bb9a5ed44d0d430d0d3ff3080201202c2d0201202e2f003bb6e53da89a1f401a803a1a7ffe00203e00203a861a1e0026209a8608a8100011b323bc02840d17c120002bb2fe7c02840917c120c1fd039be864fe800c380c1c200011bbbd182108325e4c38001db9c34f00a5f03802032028307f0058";
    private static final String BOC_FIFT_BASE64_LARGE = "te6ccgECMgEABJgAART/APSkE/S88sgLAQIBIAIDAgFIBAUADPIwgEjy8AICywYHAgEgKCkCASAICQIBziYnAgEgCgsCASAXGAIBIAwNAgEgERICASAODwAhX6QAH6RoBGAsAAEvL00/8wgB7SASCHHAPLyAdDTAwFxsJJfA+DwAzEB0x9wggGGoCPAAI4WMwHTH4BIAoIQbWludLoS8vSCCxjzYZdb0z/6AFAD4gP4ASIQNEAFbwT4YYIQQDSjwFIQupMw8AzgghCKWy7nUhC6kzDwDeCCCxjzYVIQupMw8A/ggEAARNMHAaoC1xgBgAFiCEJglNXhSELqTMPAO4IIQt2Z0GlIQupMw8BHgghAl1T39upLwEOAwgEjy8AIBIBMUAgEgFRYAHRwIHLIywHLAMsHy//J0IAAjEEz9A5voSCVAtcBMAHgMXAygAD0cIAQyMsFBfAEFc8WJPoCFMtqEssfyz/PE8mAQPsAgAD0cIAQyMsFBvAEFs8WUAT6AhTLassfEss/zxPJcfsAgAgEgGRoCASAfIAIBIBscAgEgHR4AHQBgwf0Dm+hk/oAMOAwcIAA7IBKIcEA8vIgwgCZyAH6AgKDB/RDlzABgwf0WzDigABk7UTQ+gD0BPQE1NQwgAB8yFAF+gIT9AD0AMzMye1UgAgEgISICASAjJADtPhBbyQwMQLT/9Mf+gD0BNHwCiOAICmDB/AFgEcB8vSAR1MbuvL0UzDwCFNK8AgryMv/VCC4gCD0QwGlRVDwCQSkVCSQ8AlAE/ALghCYKv//JcjL/1JAyx9SIPQAJURDUoXwB4IQMGbRDwPIy/8Syx/0AEEw8AaAA4z4QW8kMDEC0//TH/oA9ATR8Aoh0NP/MIBJURu68vQjgCApgwfwBTGARwHy8lMo8AgpyMv/VCCWgCD0QwSkVCOQ8AkC8AuCEDSISpElyMv/UkDLH1Ig9AAlRENShfAHghBwE3yHA8jL/xLLH/QAQTDwBoAB5PhBbyQwMQLU9ATR7UTQ1DDQ0/8wgElTFLry9CLQ0/8wgEgCuvL08AoxUlDwC4IQyGK6vQLIzPQAQTDwBoAH3PhBbyQyA/QE0fAK0NMA+gDTH9Mf9AQwgEsl8vSAS1OSufL0gEtTk7ny9IBNJIIQO5rKAKBQDLsb8vT4JfgVUwehIPgRUwuAIPQOb6GT0x8wkjAg4gKlLIAg9A5voZZAHIAg9BadMCDIyx/J0EAcgCD0FuIKpATIywBQA4CUAOPoCyx/LHxf0AMnwC4IQGmk4fgLIyx/0AEEw8AYAUT4QW8kMDEC9ATR7UTQ1DDQ0/8wgElRE7ry9IIQHZOq2AHI9ABBMPAGgAFs+EFvJDAxAtT0BNHtRNDUMNDT/zCASVEUuvL0IfsEghByjaOhAsjM9ABBMPAGgAgEgKisCASAwMQAXu5pe1E0NQw0NP/MIAgEgLC0CASAuLwA7tuU9qJofQBqAOhp//gAgPgAgOoYaHgAmIJqGCKgQABGzI7wChA0XwSAAK7L+fAKECRfBIMH9A5voZP6ADDgMHCAAEbu9GCEIMl5MOAAducNPAKXwOAIDICgwfwBY";
    private static final String BOC_FIFT_LARGE_HASH = "2f013a05f1522b9288e0412c524186f089ea30e87afc9a51395eed0019f2cf8f";

    private static final String BOC_FIFT_HEX_WITH_DUPS = "b5ee9c720101180100e800020310c201020163a90da09563b6740a4b7f68ca09fbdb76b0035cc101450a16e2e79b985ebbb38a0c5768616c657320546f6b656e0357484c40030119a1dcd65000000003200000032604003e1e68747470733a2f2f746f6e7768616c65732e636f6d2f636f6e74656e742f0203ccc0050602012007080201481415020120090a0201200f10000ba38000002cc00201200b0c0009b6000000c30201480d0e00094000000638000950000005f8000ba6000000304002012011170201581213000940000005c8000950000005e8000ba18000002ec002012016170009b4000000b70009d8000002d4";
    private static final String BOC_FIFT_BASE64_WITH_DUPS = "te6ccgEBGAEA6AACAxDCAQIBY6kNoJVjtnQKS39oygn723awA1zBAUUKFuLnm5heu7OKDFdoYWxlcyBUb2tlbgNXSExAAwEZodzWUAAAAAMgAAADJgQAPh5odHRwczovL3RvbndoYWxlcy5jb20vY29udGVudC8CA8zABQYCASAHCAIBSBQVAgEgCQoCASAPEAALo4AAACzAAgEgCwwACbYAAADDAgFIDQ4ACUAAAAY4AAlQAAAF+AALpgAAADBAAgEgERcCAVgSEwAJQAAABcgACVAAAAXoAAuhgAAALsACASAWFwAJtAAAALcACdgAAALU";
    private static final String BOC_FIFT_WITH_DUPS_HASH = "5049e60708f6f8aefb51009361aa6ad6fc6a14becd8d8bef37d10cf2e8ea281d";

    private static final String BOC_FIFT_HEX_DEEP_DUPLICATED_HASHMAP = "b5ee9c7241010901006a000101c0010202cb02030201200404020162060702012005050201200606020120080800434801f9c856c1260ecc28bf6928191e2b79c9a64d19c787ccb9d113c6d609690b7f0900432007e7215b04983b30a2fda4a06478ade7269934671e1f32e7444f1b5825a42dfc2404807a00";
    private static final String BOC_FIFT_DEEP_DUPLICATED_HASHMAP_HASH = "69e794b89cef40a0ee3ab947cf8ea70736101d9c86ae4168406fc72964d1a9e6";

    @Test
    public void testShouldDeserializeSerializeDeserializeBocFromHex() {
        Cell c1 = Cell.fromBoc(BOC_FIFT_HEX_LARGE);
        Cell c2 = Cell.fromBoc(BOC_FIFT_HEX_WITH_DUPS);
        Cell c3 = Cell.fromBoc(BOC_FIFT_HEX_DEEP_DUPLICATED_HASHMAP);

        assertThat(Utils.bytesToHex(c1.hash())).isEqualTo(BOC_FIFT_LARGE_HASH);
        assertThat(Utils.bytesToHex(c2.hash())).isEqualTo(BOC_FIFT_WITH_DUPS_HASH);
        assertThat(Utils.bytesToHex(c3.hash())).isEqualTo(BOC_FIFT_DEEP_DUPLICATED_HASHMAP_HASH);

        String hex1 = c1.toHex();
        String hex2 = c2.toHex(true, true, false, 2);
        String hex3 = c3.toHex();

        Cell result1 = Cell.fromBoc(hex1);
        Cell result2 = Cell.fromBoc(hex2);
        Cell result3 = Cell.fromBoc(hex3);
        assertThat(Utils.bytesToHex(result1.hash())).isEqualTo(BOC_FIFT_LARGE_HASH);
        assertThat(Utils.bytesToHex(result2.hash())).isEqualTo(BOC_FIFT_WITH_DUPS_HASH);
        assertThat(Utils.bytesToHex(result3.hash())).isEqualTo(BOC_FIFT_DEEP_DUPLICATED_HASHMAP_HASH);
    }

    @Test
    public void testShouldDeserializeSerializeDeserializeBocFromBase64() {
        Cell c1 = Cell.fromBoc(Utils.base64ToBytes(BOC_FIFT_BASE64_LARGE));
        Cell c2 = Cell.fromBoc(Utils.base64ToBytes(BOC_FIFT_BASE64_WITH_DUPS));

        assertThat(Utils.bytesToHex(c1.hash())).isEqualTo(BOC_FIFT_LARGE_HASH);
        assertThat(Utils.bytesToHex(c2.hash())).isEqualTo(BOC_FIFT_WITH_DUPS_HASH);

        String base64c1 = c1.toBase64();
        String base64c2 = c2.toBase64();

        Cell c3 = Cell.fromBoc(Utils.base64ToBytes(base64c1));
        Cell c4 = Cell.fromBoc(Utils.base64ToBytes(base64c2));

        assertThat(Utils.bytesToHex(c3.hash())).isEqualTo(BOC_FIFT_LARGE_HASH);
        assertThat(Utils.bytesToHex(c4.hash())).isEqualTo(BOC_FIFT_WITH_DUPS_HASH);
    }

    /**
     * fails with java.lang.Error: Incorrect TopUppedArray - TODO
     */
    @Test
    public void testShouldDeserializeSerializeDeserializeBocWithExoticCells() {
//        Cell.fromBoc(Utils.base64ToBytes("));
    }

    @Test
    public void testShouldDeserialize2() {
        Cell.fromBoc(Utils.base64ToBytes("te6cckEBAQEAIgAAQI4l3QgXTJzTGSGBoCKurXZZrCqdShK4T1Fg7dLsxwbqJRoppg=="));
        CellBuilder.fromBoc(Utils.base64ToBytes("te6cckEBAQEAIgAAQI4l3QgXTJzTGSGBoCKurXZZrCqdShK4T1Fg7dLsxwbqJRoppg=="));
    }

    @Test
    public void testShouldDeserializeAccountState() {
        Cell c = Cell.fromBoc("b5ee9c724101030100d700026fc00c419e2b8a3b6cd81acd3967dbbaf4442e1870e99eaf32278b7814a6ccaac5f802068148c314b1854000006735d812370d00764ce8d340010200deff0020dd2082014c97ba218201339cbab19f71b0ed44d0d31fd31f31d70bffe304e0a4f2608308d71820d31fd31fd31ff82313bbf263ed44d0d31fd31fd3ffd15132baf2a15144baf2a204f901541055f910f2a3f8009320d74a96d307d402fb00e8d101a4c8cb1fcb1fcbffc9ed5400500000000229a9a317d78e2ef9e6572eeaa3f206ae5c3dd4d00ddd2ffa771196dc0ab985fa84daf451c340d7fa");
        log.info(c.print());
        log.info(c.bits.toString());
        log.info("readCursor {}, writeCursor {}, length {}", c.bits.readCursor, c.bits.writeCursor, c.bits.length);

    }
}
