package org.ton.java.tlb;

import lombok.extern.slf4j.Slf4j;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.ton.java.cell.Cell;
import org.ton.java.cell.CellBuilder;
import org.ton.java.cell.CellSlice;
import org.ton.java.tlb.loader.Tlb;
import org.ton.java.tlb.types.*;
import org.ton.java.utils.Utils;

import java.math.BigInteger;

import static org.assertj.core.api.Assertions.assertThat;

@Slf4j
@RunWith(JUnit4.class)
public class TestTlbMessageReader {

    @Test
    public void testCornerInternalMessage() {
        Cell c = CellBuilder.fromBoc("b5ee9c724101020100860001b36800bf4c6bdca25797e55d700c1a5448e2af5d1ac16f9a9628719a4e1eb2b44d85e33fd104a366f6fb17799871f82e00e4f2eb8ae6aaf6d3e0b3fb346cd0208e23725e14094ba15d20071f12260000446ee17a9b0cc8c028d8c001004d8002b374733831aac3455708e8f1d2c7f129540b982d3a5de8325bf781083a8a3d2a04a7f943813277f3ea");
        InternalMessage internalMessage = (InternalMessage) Tlb.load(InternalMessage.class, CellSlice.beginParse(c));
        log.info("internalMessage {}", internalMessage);
        assertThat(internalMessage.isIHRDisabled()).isTrue();
        assertThat(internalMessage.getValue().getCoins()).isEqualTo(BigInteger.valueOf(9980893000L));
        assertThat(internalMessage.getFwdFee()).isEqualTo(BigInteger.valueOf(9406739L));
        assertThat(internalMessage.getCreatedAt()).isEqualTo(1684018284L);
        assertThat(internalMessage.getCreatedLt()).isEqualTo(BigInteger.valueOf(37621510000006L));
        //run golang test and compare
    }

    @Test
    public void testCornerMessage() {
        Cell c = CellBuilder.fromBoc("b5ee9c724101020100860001b36800bf4c6bdca25797e55d700c1a5448e2af5d1ac16f9a9628719a4e1eb2b44d85e33fd104a366f6fb17799871f82e00e4f2eb8ae6aaf6d3e0b3fb346cd0208e23725e14094ba15d20071f12260000446ee17a9b0cc8c028d8c001004d8002b374733831aac3455708e8f1d2c7f129540b982d3a5de8325bf781083a8a3d2a04a7f943813277f3ea");
        Message message = (Message) Tlb.load(Message.class, CellSlice.beginParse(c));
        log.info("internalMessage {}", message);
        InternalMessage internalMessage = (InternalMessage) message.getInfo().getMsg();
        assertThat(internalMessage.isIHRDisabled()).isTrue();
        assertThat(internalMessage.getValue().getCoins()).isEqualTo(BigInteger.valueOf(9980893000L));
        assertThat(internalMessage.getFwdFee()).isEqualTo(BigInteger.valueOf(9406739L));
        assertThat(internalMessage.getCreatedAt()).isEqualTo(1684018284L);
        assertThat(internalMessage.getCreatedLt()).isEqualTo(BigInteger.valueOf(37621510000006L));
        //run golang test and compare
    }

    @Test
    public void testExternalMessage1() {
        Cell c = CellBuilder.fromBoc("B5EE9C724102030100010F0002DF88009F4CFD8AB69CB20864160E3A40E4F578643B5B5B409C51A0215DA579D95E49F6119529DEF4481C60CD81087FC7B058797AFDCEBCC1BE127EE2C4707C1E1C0F3D12F955EC3DE1C63E714876A931F6C6F13E6980284238AA9F94B0EC5859B37C4DE1E5353462FFFFFFFFE000000010010200DEFF0020DD2082014C97BA218201339CBAB19F71B0ED44D0D31FD31F31D70BFFE304E0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED5400500000000029A9A31782A0B2543D06FEC0AAC952E9EC738BE56AB1B6027FC0C1AA817AE14B4D1ED2FB2452EEC2");
        ExternalMessage externalMessage = (ExternalMessage) Tlb.load(ExternalMessage.class, CellSlice.beginParse(c));
        log.info("externalMessage {}", externalMessage);

//        assertThat(externalMessage.getStateInit().getCode().toString()).isEqualTo("FF0020DD2082014C97BA218201339CBAB19F71B0ED44D0D31FD31F31D70BFFE304E0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED54");
//        assertThat(externalMessage.getStateInit().getData().toString()).isEqualTo("0000000029A9A31782A0B2543D06FEC0AAC952E9EC738BE56AB1B6027FC0C1AA817AE14B4D1ED2FB");
//        assertThat(externalMessage.getBody().toString()).isEqualTo("A94EF7A240E3066C0843FE3D82C3CBD7EE75E60DF093F7162383E0F0E079E897CAAF61EF0E31F38A43B5498FB63789F34C014211C554FCA58762C2CD9BE26F0F29A9A317FFFFFFFF00000000");
        assertThat(externalMessage.getDstAddr().getMsgAddressInt().toString()).isEqualTo("0:4fa67ec55b4e5904320b071d20727abc321dadada04e28d010aed2bcecaf24fb");
    }

    @Test
    public void testInternalMessageLoadFromCell() {
        InternalMessage internalMessage = InternalMessage.builder()
                .iHRDisabled(false)
                .bounce(true)
                .bounced(false)
                .srcAddr(MsgAddress.builder().magic(0).build())
                .dstAddr(MsgAddress.builder().magic(0).build()) // todo toAddress
//                .srcAddr(Address.of("EQAOp1zuKuX4zY6L9rEdSLam7J3gogIHhfRu_gH70u2MQnmd"))
//                .dstAddr(Address.of("EQA_B407fiLIlE5VYZCaI2rki0in6kLyjdhhwitvZNfpe7eY"))
                .value(CurrencyCollection.builder().coins(Utils.toNano(0.5)).build())
                .createdAt(5L)
                .createdLt(BigInteger.TWO)
//                .stateInit(StateInit.builder()
//                        .code(CellBuilder.beginCell().endCell())
//                        .data(CellBuilder.beginCell().endCell())
//                        .build())
//                .body(CellBuilder.beginCell().endCell())
                .build();

        InternalMessage loadedInternalMessage = (InternalMessage) Tlb.load(InternalMessage.class, CellSlice.beginParse(internalMessage.toCell()));
        log.info("loadedInternalMessage {}", loadedInternalMessage);
        assertThat(loadedInternalMessage.getValue().getCoins()).isEqualTo(BigInteger.valueOf(500000000L));
        assertThat(loadedInternalMessage.getCreatedLt()).isEqualTo(BigInteger.valueOf(2L));
        assertThat(loadedInternalMessage.getCreatedAt()).isEqualTo(5L);
    }

    @Test
    public void testMessageLoadFromCell() {
        InternalMessage internalMessage = InternalMessage.builder()
                .iHRDisabled(false)
                .bounce(true)
                .bounced(false)
                .srcAddr(MsgAddress.builder().magic(0).build())
                .dstAddr(MsgAddress.builder().magic(0).build())
                .value(CurrencyCollection.builder().coins(Utils.toNano(0.5)).build())
                .createdAt(5L)
                .createdLt(BigInteger.TWO)
//                .stateInit(null)
//                .body(CellBuilder.beginCell().storeUint(369, 27).endCell())
                .build();

        InternalMessage loadedMessage = (InternalMessage) Tlb.load(InternalMessage.class, CellSlice.beginParse(internalMessage.toCell()));
        log.info("loadedMessage {}", loadedMessage);
        assertThat(loadedMessage.getCreatedAt()).isEqualTo(5);
    }

    @Test
    public void testExternalMessageLoadFromCell() {
        ExternalMessage externalMessage = ExternalMessage.builder()
                .magic(0b10)
                .srcAddr(MsgAddress.builder().magic(0).build())
                .dstAddr(MsgAddress.builder().magic(0).build())
                .importFee(BigInteger.TEN)
//                .stateInit(null)
//                .body(CellBuilder.beginCell().storeUint(369, 27).endCell())
                .build();

        ExternalMessage loadedMessage = (ExternalMessage) Tlb.load(ExternalMessage.class, CellSlice.beginParse(externalMessage.toCell()));
        log.info("loadedMessage {}", loadedMessage);
        assertThat(loadedMessage.getImportFee()).isEqualTo(BigInteger.TEN);
    }

    @Test
    public void testExternalMessageOutLoadFromCell() {
        ExternalMessageOut externalMessageOut = ExternalMessageOut.builder()
                .srcAddr(MsgAddress.builder().magic(0).build())
                .dstAddr(MsgAddress.builder().magic(0).build())
                .createdLt(BigInteger.TEN)
                .createdAt(5L)
//                .stateInit(null)
//                .body(CellBuilder.beginCell().storeUint(369, 27).endCell())
                .build();

        ExternalMessageOut loadedMessage = (ExternalMessageOut) Tlb.load(ExternalMessageOut.class, CellSlice.beginParse(externalMessageOut.toCell()));
        log.info("loadedMessage {}", loadedMessage);
        assertThat(loadedMessage.getCreatedAt()).isEqualTo(5);
    }

    //https://tonsandbox.com/explorer/address/EQBKNxSb8ZItjuVB0C-f_idtdAc0S389DZxFwaFZVegBFEn8/11830865000003_161a9cc5a7de2a03aeba4d9cdbbab747a18148ee9dccabdf981f93a353619391
    @Test
    public void testExternalMessage2() {
        String bocHex = Utils.base64ToHexString("te6cckEBAgEAgQABQ4AUfOW61YF/y1MIwE8E1RvkKBdIVHAgdBGTjidHc8Yc9XABALRiYWZ5YmVpY3Q1bzJua2lqbmRheG16enB5bjZjZm1jcnRiZmI3N2Y0bDNqemQzdGE0a2ViY2hsaGVsdS5pcGZzLm5mdHN0b3JhZ2UubGluay9kYXRhLmpzb27XOQ8v");
        log.info("bocHex: {}", bocHex);
        Cell c = CellBuilder.fromBoc(bocHex);
        ExternalMessage externalMessage = (ExternalMessage) Tlb.load(ExternalMessage.class, CellSlice.beginParse(c));
        log.info("externalMessage {}", externalMessage);
//
//        assertThat(externalMessage.getStateInit().getCode().toString()).isEqualTo("FF0020DD2082014C97BA218201339CBAB19F71B0ED44D0D31FD31F31D70BFFE304E0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED54");
//        assertThat(externalMessage.getStateInit().getData().toString()).isEqualTo("0000000029A9A31782A0B2543D06FEC0AAC952E9EC738BE56AB1B6027FC0C1AA817AE14B4D1ED2FB");
//        assertThat(externalMessage.getBody().toString()).isEqualTo("A94EF7A240E3066C0843FE3D82C3CBD7EE75E60DF093F7162383E0F0E079E897CAAF61EF0E31F38A43B5498FB63789F34C014211C554FCA58762C2CD9BE26F0F29A9A317FFFFFFFF00000000");
//        assertThat(externalMessage.getDstAddr().toString(false)).isEqualTo("0:4fa67ec55b4e5904320b071d20727abc321dadada04e28d010aed2bcecaf24fb");
    }

    //https://tonsandbox.com/explorer/address/EQBKNxSb8ZItjuVB0C-f_idtdAc0S389DZxFwaFZVegBFEn8/11830865000003_161a9cc5a7de2a03aeba4d9cdbbab747a18148ee9dccabdf981f93a353619391
    @Test
    public void testInternalMessage2() {
        String bocHex = Utils.base64ToHexString("te6cckEBAwEAnAABLwAAAAHHmiv5MdZBawAAAAAAAAAfNMS0CAEBQ4AUfOW61YF/y1MIwE8E1RvkKBdIVHAgdBGTjidHc8Yc9XACALRiYWZ5YmVpY3Q1bzJua2lqbmRheG16enB5bjZjZm1jcnRiZmI3N2Y0bDNqemQzdGE0a2ViY2hsaGVsdS5pcGZzLm5mdHN0b3JhZ2UubGluay9kYXRhLmpzb27Kwi+Q");
        log.info("bocHex: {}", bocHex);
        Cell c = CellBuilder.fromBoc(bocHex);
        log.info("cell " + c.print());
        InternalMessage internalMessage = (InternalMessage) Tlb.load(InternalMessage.class, CellSlice.beginParse(c));
        log.info("internalMessage {}", internalMessage);
    }

    @Test
    public void testInternalMessageCellTlb() {
        String bocHex = Utils.base64ToHexString("te6cckEBAwEAnAABLwAAAAHHmiv5MdZBawAAAAAAAAAfNMS0CAEBQ4AUfOW61YF/y1MIwE8E1RvkKBdIVHAgdBGTjidHc8Yc9XACALRiYWZ5YmVpY3Q1bzJua2lqbmRheG16enB5bjZjZm1jcnRiZmI3N2Y0bDNqemQzdGE0a2ViY2hsaGVsdS5pcGZzLm5mdHN0b3JhZ2UubGluay9kYXRhLmpzb27Kwi+Q");
        log.info("bocHex: {}", bocHex);
        Cell c = CellBuilder.fromBoc(bocHex);
        log.info("cell " + c.print());
        InternalMessage internalMessage = (InternalMessage) CellSlice.beginParse(c).loadTlb(InternalMessage.class);
        log.info("internalMessage {}", internalMessage);
    }


    @Test
    public void testShouldDeserializeInMsgDescr() {
        Cell c = Cell.fromBoc("b5ee9c724102300100078d0001099b2dcef0200102090d96e77810120202090d96e778100a030246bfa9346e9464c7f146a6be4225b1c98e29a59561fbb67319922eda6acc69f6b9130030040501064606000903af7000000000000000000000000000000000000000000000000000000000000000000000000000f42439440e0c397a3b2ee3cbd81ea78021862f892a5a9e779d1fecd55236d6571eb5200000000000f424165a57c5f0001408082f06020f0409017d784018110729009a27c89c40000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101a00900ab29fe09ec98d5f7fe7ba21b174ce0ef21592ce1aa81e6f528916066f754d4b52559593fc0000000000000000000000000000000000000000000000000000000000000001017d784000000000000001e8484cb4af8be4002094365b9de04260b0251bf084dd4db5a349ccfcf293baf5f5b626f4a130856b6613ded62877bfecc2536dcd96e7780cd96e77a110c03af704f64c6afbff3dd10d8ba6707790ac9670d540f37a9448b0337baa6a5a92acac00000000000f4247d59d160ea9c63d10edae2c76ada993f982915bc75f7bcc0fb81280820d15523200000000000f424165a57c5f0001408100f0d020f0c0901c9c38018110e29009c402468bb8000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008272bf8229e6e684701825a6f8e1fb0f8155aba759d58b82e73b8405092874e23fa816617de1e9f3a79e4c7d8a3a51ac0c8b54b6bbcd4f824c9f800aa2f36fee26720101a019010c46060365b9de19020300101c130246bf919848778310ed687087000647581469374dff5e9f0fb1cf744809c5016e12fb00301a1403b57ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef00000000000f42450000000000000000000000000000000000000000000000000000000000000000000000000000000065a57c5f0003e665b9448171615001f040901efe92001c0332dca2365b9de4000827290aec8965afabb16ebc3cb9b408ebae71b618d78788bc80d09843593cac98da490aec8965afabb16ebc3cb9b408ebae71b618d78788bc80d09843593cac98da40201e01b180101df1900b959ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdf3fc13d931abeffcf744362e99c1de42b259c35503cdea5122c0cdeea9a96a4ab2b101c9c380006cb73bc00000000001e848ccb4af8be7fffffffc001064606001b00ab29fe09ec98d5f7fe7ba21b174ce0ef21592ce1aa81e6f528916066f754d4b52559593ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbd01efe92000000000000001e8488cb4af8be400246bfad8011dbd0ddd5549e65b1288c858e77dc3e0a5ba9eae0d756ca2e8b5731753e0030211d03af7000000000000000000000000000000000000000000000000000000000000000000000000000f42410000000000000000000000000000000000000000000000000000000000000000000000000000000065a57c5f0001408201f1e0113040829a40cd41efffe02230082725828aa96d32f676df2049228847cc42b15b0a52d9ffa3bc66b36fcedeff20af9310a1de222ce584cb4e86613b11d31616e9eaa4ff9ee499f19b104cf71eb504f0101a02201064606002201a369fe00000000000000000000000000000000000000000000000000000000000000013fc000000000000000000000000000000000000000000000000000000000000000020000000000001e8480cb4af8be402302012025240015bfffffffbcbd1a94a200100015be000003bcb3670dc155500245bf2ac017c203ca0d9d008bf543c1364eebf27183668cf1e8b1e0e98af56b2dc1dc00c22d2703af7333333333333333333333333333333333333333333333333333333333333333300000000000f4242cac3c5723cb68f5f7dba257e7f812140298ea360bdbf630cd33c8da2b098829200000000000f424165a57c5f00014082c2b28020f04091954fc4018112a29005bc00000000000000000000000012d452da449e50b8cf7dd27861f146122afe1b546bb8b70fc8216f0c614139f8e04009e41778c0a604000000000000000003e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000082729304b9982993165dc7b4b2ccfc64c61bf6455afe7e4fe1233d5f827261360d8ed855aea1ede2adcff55d3d37fcf59c03bd19c39f843a14faef85cad3980cf6920101a02e01064606002e00ab69fe00000000000000000000000000000000000000000000000000000000000000013fccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccd1954fc4000000000000001e8480cb4af8be40008272310a1de222ce584cb4e86613b11d31616e9eaa4ff9ee499f19b104cf71eb504f606c97d0dc8b63016a6afd67b2fe52cd0e02a3dcdf71f331cf1e8006ca8e51a323766587");
        InMsgDescr inMsgDescr = (InMsgDescr) CellSlice.beginParse(c).loadTlb(InMsgDescr.class);
        log.info("inMsgDescr {}", inMsgDescr);
    }

    @Test
    public void testShouldDeserializeStateUpdate() {
        Cell c = Cell.fromBoc("b5ee9c7241024301000be900028a045052419cde96601f375f5ff37f0c0958d99d696a6b31a075787a22769006e057724ab9590a228d7373ef8d28544bea428d454ad789b07c24ceb3fc7a07c32c59001400140301245b9023afe2ffffff1100ffffffff0000000000000000000000010000000065a57c5f00000000000f424c0000000160160224112213821158e21bcc4e71c0300626245b9023afe2ffffff1100ffffffff0000000000000000000000000000000065a57c180000000000000000ffffffff600529041521330000000000000000000000000000000084563886eda33f200028250011000000000000000010231340422b1c437989ce3806090726219fbf955555555555555555555555555555555555555555555555555555555555555502812a05f200393159c085ce242a1fe7dc6f3b4ef0cfbf54eef7ad3f40de588995b86f9c2f46400000000003d09220082271cff555555555555555555555555555555555555555555555555555555555555555533a973dc00000000000000000003d0925409502f90015d02f2d23130108ac710d9ba5bc60180e0a26219fbf66666666666666666666666666666666666666666666666666666666666666660502b95fd5003794d7a89bf0b1b83d2e445fab3781b81d7584baecb59bebf56b2e2f1fb798f3800000000007a121400b2271cff33333333333333333333333333333333333333333333333333333333333333332ce9bcbc00000000000000000003d090d40ae57f54016d0410c015188caa7e2000000000000000000000000000000000000000000000000000000000000000000000000010d001f65a5823b65a57fe3609184e72a000010231460108ac710d4479c1c010f21262265df40845638869fc774100fb887249507b17fc5674e8ad1ae8058eddc490c24e8c0138896214d64c0a4637800000000007a121c26102477cff000000000000000000000000000000000000000000000000000000000000000021881c9400000000000000000003d09121158e21a7f1dd04033c0263c3b3a2455cc26aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac22b1c4379fc3f1806122e1c260103d0401301eb50000000000000000800000000000000000000000000000005a2f25be03d373e41b62e16fb0d999a97235b40ea71f1522a5fa982a817ea60fd265bcbc973e584eb1eab6b3ea65309a0a32cec006e1bee4f781214122612c4d000000000040000000000000007fffffff800000004cb4af986000000c91400030020284801019fffb8e8af80f298cefbc832633b545151ef8eb59eb427e724054e1cab56efbf000f0211800000000007a124d01817006bb0400000000000000000000000800000000007a1234909ba9b6b469399f9e52775ebeb6c4de942610ad6cc27bdac50ef7fd984a6dbc00213e2000000000000f424983d190173a7ffffffffffffffffd64515aa043f53a3f60eaf663295c8a035537a617a3cc21f5e94859356c021f6400000000003d092c00000000003d092e01a01064606001b00ab29fe09ec98d5f7fe7ba21b174ce0ef21592ce1aa81e6f528916066f754d4b52559593ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbd01efe92000000000000001e8496cb4af8be4002bf0001f530ba430000000060000000000000000800000000000000000000000282920ce6f4b300f9bafaff9bf8604ac6cceb4b53598d03abc3d113b4803702bad5a69b6f03e7126bc6ee061bd3bb75f53b946845e2eb9067bd5b31527fd91f00be201d0201201f1e00b3bfecabb049ff67c5388c8bbc8010e2e757141a27180b24e1450e6eced5c6273178a32d2be2f8000000000000000800000008000000000000000800000000000000000000000000000000000000000000000000000000000000040073dfe8cb4af8be0000000000000002000000020000000000000002000000000000000000000000000000000000000000000000000000000000000100abd040000000000000002000000000000000000000000a0a48339bd2cc03e6ebebfe6fe1812b1b33ad2d4d66340eaf0f444ed200dc0aeb569a6dbc0f9c49af1bb8186f4eedd7d4ee51a1178bae419ef56cc549ff647c10219bbe8f64c6afbff3dd10d8ba6707790ac9670d540f37a9448b0337baa6a5a92acac0213ab668031a93e8c798b2cb3e2acc80b1abde06ed7b06270a03fe422373e797c88470ea8c00000000003d092222236fcff04f64c6afbff3dd10d8ba6707790ac9670d540f37a9448b0337baa6a5a92acac21881f4800000000000000000003d093109d5b34017f0372342004811ef55ac000000000000000000000000000000000000000000000000000000000000000022390000000000000000000000000000000184563886f3139c7009cc4b40282625284801018036bd5aa65bd160ccc4f204a44731afdb62bab1ab21c9496af2fc1b4d226ccd000302012028270015bfffffffbcbd1a94a200100015be000003bcb3670dc155502113821158e21bb68cfc80102a221340422b1c4376d19f9002302b219fbf955555555555555555555555555555555555555555555555555555555555555502812a05f20000000000000000000000000000000000000000000000000000000000000000000000000000000000202c2271cff555555555555555555555555555555555555555555555555555555555555555533a973dc0000000000000000000000001409502f90015d02f2d21490000000013311def76051bbabfb248bd9a90d300716f598ffe8f8b65c8fddd8501b0e8c6402e28480101aa559cb80ee5ce3f4b1e6107ec3ea424c2b89946804aad09f246e96353cc15c5000e2848010160d01ddc9d54e89cf8040b78fab3258c9327109018e4078f7f5c7ff0ba401aa2000c22130108ac710d90c501c0083331219fbf66666666666666666666666666666666666666666666666666666666666666660502540be4000000000000000000000000000000000000000000000000000000000000000000000000000000000040322271cff33333333333333333333333333333333333333333333333333333333333333332cc9ba500000000000000000000000001409502f90016d04140221460108ac710d4643854003834219bbe8f64c6afbff3dd10d8ba6707790ac9670d540f37a9448b0337baa6a5a92acac021dcd650000000000000000000000000000000000000000000000000000000000000000000000000000000000235236fcff04f64c6afbff3dd10d8ba6707790ac9670d540f37a9448b0337baa6a5a92acac21881f4800000000000000000000000010ee6b28017f0373642004811ef55aa00000000000000000000000000000000000000000000000000000000000000002848010145910e27fe37d8dcf1fac777ebb3bda38ae1ea8389f81bfb1bc0079f3f67ef5b00022165df40845638869f6816000000000000000000000000000000000000000000000000000000000000000000000000000000000004392377cff0000000000000000000000000000000000000000000000000000000000000000212819f400000000000000000000000021158e21a7da0580013c03c3b3a284801012d8973441aaae38b20c3fda9274f0a97de1447af2ecd7e424267fcca9901866b000300480000000045f1e3dc29d6bf453889c449069a2458b2d56701fc3661d498162f743e5ba6210098ff0020dd2082014c97ba9730ed44d0d70b1fe0a4f260810200d71820d70b1fed44d0d31fd3ffd15112baf2a122f901541044f910f2a2f80001d31f31d307d4d101fb00a4c8cb1fcbffc9ed540173a7e00000000000000020847cbb01de39c3308edf1091131c7dedb780ca3e34d85bdc1a6ab4df16d79e800000000003d092400000000003d092603e01064606003f00ab29fe09ec98d5f7fe7ba21b174ce0ef21592ce1aa81e6f528916066f754d4b52559593fc0000000000000000000000000000000000000000000000000000000000000001017d784000000000000001e8492cb4af8be4000490000000000000000000000000000000000000000000000000000000000000000000000000128480101febfd56fa7c2a5010aea13c738df0c2155d6670e8b055dd312d2372f38f7701b000e28480101986c49971b96062e1fba4410e27249c8d73b0a9380f7ffd44640167e68b215e80003c9f67164");
        StateUpdate stateUpdate = (StateUpdate) CellSlice.beginParse(c).loadTlb(StateUpdate.class);
        log.info("stateUpdate {}", stateUpdate);
    }

    @Test
    public void testShouldDeserializeBlockInfo() {
        Cell c = Cell.fromBoc("b5ee9c724101020100a10001a09bc7a987000000000001000000010000000000ffffffff000000000000000065a57c5f00000000000f424000000000000f424cf530ba43000000000000000100000000c400000004000000000000002e0100980000000000000000000000005052419cde96601f375f5ff37f0c0958d99d696a6b31a075787a22769006e0575ab4d36de07ce24d78ddc0c37a776ebea7728d08bc5d720cf7ab662a4ffb23e02d1bf94f");
        BlockInfo blockInfo = (BlockInfo) CellSlice.beginParse(c).loadTlb(BlockInfo.class);
        log.info("blockInfo {}", blockInfo);
    }

    @Test
    public void testShouldDeserializeBlock() {
        Cell c = Cell.fromBoc("");
        Block block = (Block) CellSlice.beginParse(c).loadTlb(Block.class);
        log.info("block {}", block);
    }

}