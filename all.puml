@startuml
class org.ton.java.tlb.types.JettonBridgePrices {
~ BigInteger bridgeBurnFee
~ BigInteger bridgeMintFee
~ BigInteger walletMinTonsForStorage
~ BigInteger walletGasConsumption
~ BigInteger minterMinTonsForStorage
~ BigInteger discoverGasConsumption
+ Cell toCell()
+ {static} JettonBridgePrices deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigVotingSetup {
~ int cfgVoteSetup
~ ConfigProposalSetup normalParams
~ ConfigProposalSetup criticalParams
+ Cell toCell()
+ {static} ConfigVotingSetup deserialize(CellSlice)
}


class org.ton.java.tlb.types.CryptoSignature {
~ int magic
~ BigInteger r
~ BigInteger s
+ Cell toCell()
+ {static} CryptoSignature deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams37 {
~ ValidatorSet nextTempValidatorSet
+ Cell toCell()
+ {static} ConfigParams37 deserialize(CellSlice)
}


interface org.ton.java.tlb.types.CatchainConfig {
~ Cell toCell()
~ {static} CatchainConfig deserialize(CellSlice)
}

class org.ton.java.tlb.types.AccountStateActive {
~ int magic
~ StateInit stateInit
+ Cell toCell()
+ {static} AccountStateActive deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams2 {
~ Address minterAddr
+ Cell toCell()
+ {static} ConfigParams2 deserialize(CellSlice)
}


class org.ton.java.tlb.types.StorageUsedShort {
~ BigInteger cells
~ BigInteger bits
+ Cell toCell()
+ {static} StorageUsedShort deserialize(CellSlice)
}


class org.ton.java.tlb.types.InMsgImportTr {
~ MsgEnvelope inMsg
~ MsgEnvelope outMsg
~ BigInteger transitFee
+ Cell toCell()
+ {static} InMsgImportTr deserialize(CellSlice)
}


class org.ton.java.tlb.types.InMsgImportIhr {
~ Message msg
~ Transaction transaction
~ BigInteger ihrFee
~ Cell proofCreated
+ Cell toCell()
+ {static} InMsgImportIhr deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockLimits {
~ int magic
~ ParamLimits bytes
~ ParamLimits gas
~ ParamLimits ltDelta
+ Cell toCell()
+ {static} BlockLimits deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockDataState {
~ BlockData blockData
~ ShardState blockState
}

class org.ton.java.tlb.types.TransactionDescriptionMergeInstall {
~ int magic
~ SplitMergeInfo splitInfo
~ Transaction prepareTransaction
~ StoragePhase storagePhase
~ CreditPhase creditPhase
~ ComputePhase computePhase
~ ActionPhase actionPhase
~ boolean aborted
~ boolean destroyed
- String getMagic()
+ Cell toCell()
+ {static} TransactionDescriptionMergeInstall deserialize(CellSlice)
}


class org.ton.java.tlb.types.CurrencyCollection {
~ BigInteger coins
~ TonHashMapE extraCurrencies
+ Cell toCell()
+ {static} CurrencyCollection deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardHashes {
~ TonHashMapE shardHashes
+ Cell toCell()
+ {static} ShardHashes deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams40 {
~ long magic
~ BigInteger defaultFlatFine
~ long defaultProportionalFine
~ int severityFlatMult
~ int severityProportionalMult
~ int unpunishableInterval
~ int longInterval
~ int longFlatMult
~ int longProportionalMult
~ int mediumInterval
~ int mediumFlatMult
~ int mediumProportionalMult
+ Cell toCell()
+ {static} ConfigParams40 deserialize(CellSlice)
}


class org.ton.java.tlb.types.StateInit {
~ BigInteger depth
~ TickTock tickTock
~ Cell code
~ Cell data
~ Cell lib
+ Cell toCell()
+ {static} StateInit deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardDescr {
~ long magic
~ long seqNo
~ long regMcSeqno
~ BigInteger startLt
~ BigInteger endLt
~ BigInteger rootHash
~ BigInteger fileHash
~ boolean beforeSplit
~ boolean beforeMerge
~ boolean wantSplit
~ boolean wantMerge
~ boolean nXCCUpdated
~ int flags
~ long nextCatchainSeqNo
~ BigInteger nextValidatorShard
~ long minRefMcSeqNo
~ long genUTime
~ FutureSplitMerge splitMergeAt
~ CurrencyCollection feesCollected
~ CurrencyCollection fundsCreated
~ Cell refInfoA
- String getMagic()
- String getRootHash()
- String getFileHash()
+ Cell toCell()
+ {static} ShardDescr deserialize(CellSlice)
}


class org.ton.java.tlb.types.BouncePhaseOk {
~ int magic
~ StorageUsedShort msgSize
~ BigInteger msgFees
~ BigInteger fwdFees
- String getMagic()
+ Cell toCell()
+ {static} BouncePhaseOk deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams10 {
~ TonHashMap criticalParams
+ Cell toCell()
+ {static} ConfigParams10 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ValidatorSignedTempKey {
~ int magic
~ ValidatorTempKey key
~ CryptoSignature signature
+ Cell toCell()
+ {static} ValidatorSignedTempKey deserialize(CellSlice)
}


class org.ton.java.tlb.types.TransactionDescription {
~ Object description
+ Cell toCell()
+ {static} TransactionDescription deserialize(CellSlice)
}


class org.ton.java.tlb.types.Validator {
~ long magic
~ SigPubKey publicKey
~ BigInteger weight
+ Cell toCell()
+ {static} ValidatorAddr deserialize(CellSlice)
}


class org.ton.java.tlb.types.ExternalMessageOutInfoRelaxed {
~ long magic
~ MsgAddress srcAddr
~ MsgAddress dstAddr
~ BigInteger createdLt
~ long createdAt
- String getMagic()
+ Cell toCell()
+ {static} ExternalMessageOutInfoRelaxed deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams18 {
~ TonHashMap storagePrices
+ Cell toCell()
+ {static} ConfigParams18 deserialize(CellSlice)
}


class org.ton.java.tlb.types.AccountBlock {
~ long magic
~ BigInteger addr
~ TonHashMapAug transactions
~ Cell stateUpdate
+ Cell toCell()
+ {static} AccountBlock deserialize(CellSlice)
}


class org.ton.java.tlb.types.TransactionDescriptionMergePrepare {
~ int magic
~ SplitMergeInfo splitInfo
~ StoragePhase storagePhase
~ boolean aborted
- String getMagic()
+ Cell toCell()
+ {static} TransactionDescriptionMergePrepare deserialize(CellSlice)
}


class org.ton.java.tlb.types.InMsgImportFin {
~ MsgEnvelope inMsg
~ Transaction transaction
~ BigInteger fwdFee
+ Cell toCell()
+ {static} InMsgImportFin deserialize(CellSlice)
}


interface org.ton.java.tlb.types.SizeLimitsConfig {
~ Cell toCell()
~ {static} SizeLimitsConfig deserialize(CellSlice)
}

class org.ton.java.tlb.types.InternalMessageInfoRelaxed {
~ long magic
~ boolean iHRDisabled
~ boolean bounce
~ boolean bounced
~ MsgAddress srcAddr
~ MsgAddress dstAddr
~ CurrencyCollection value
~ BigInteger iHRFee
~ BigInteger fwdFee
~ BigInteger createdLt
~ long createdAt
- String getMagic()
+ Cell toCell()
+ {static} InternalMessageInfoRelaxed deserialize(CellSlice)
}


class org.ton.java.tlb.types.InMsgDiscardFin {
~ MsgEnvelope inMsg
~ BigInteger transactionId
~ BigInteger fwdFee
+ Cell toCell()
+ {static} InMsgDiscardFin deserialize(CellSlice)
}


class org.ton.java.tlb.types.ExternalMessageInfo {
~ long magic
~ MsgAddressExt srcAddr
~ MsgAddressInt dstAddr
~ BigInteger importFee
- String getMagic()
+ Cell toCell()
+ {static} ExternalMessageInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.ExtBlkRef {
~ BigInteger endLt
~ int seqno
~ BigInteger rootHash
~ BigInteger fileHash
+ String getRootHash()
+ String getFileHash()
+ Cell toCell()
+ {static} ExtBlkRef deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams20 {
~ GasLimitsPrices configMcGasPrices
+ Cell toCell()
+ {static} ConfigParams20 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams17 {
~ BigInteger minStake
~ BigInteger maxStake
~ BigInteger minTotalStake
~ long maxStakeFactor
+ Cell toCell()
+ {static} ConfigParams17 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams {
~ Address configAddr
~ TonHashMap config
+ Cell toCell()
+ {static} ConfigParams deserialize(CellSlice)
}


class org.ton.java.tlb.types.AccountStateFrozen {
~ int magic
~ BigInteger stateHash
+ Cell toCell()
+ {static} AccountStateFrozen deserialize(CellSlice)
}


class org.ton.java.tlb.types.MsgAddressExtNone {
~ int magic
+ String toString()
+ Cell toCell()
+ {static} MsgAddressExtNone deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockCreateStatsOrdinary {
~ TonHashMapE list
+ Cell toCell()
+ {static} BlockCreateStatsOrdinary deserialize(CellSlice)
}


interface org.ton.java.tlb.types.MsgAddressExt {
~ String toString()
~ Cell toCell()
~ {static} MsgAddressExt deserialize(CellSlice)
}

class org.ton.java.tlb.types.ConfigParams21 {
~ GasLimitsPrices configGasPrices
+ Cell toCell()
+ {static} ConfigParams21 deserialize(CellSlice)
}


class org.ton.java.tlb.types.Anycast {
~ int depth
~ byte rewritePfx
+ Cell toCell()
+ {static} Anycast deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockProof {
~ int magic
~ BlockIdExtShardIdent proofFor
~ Cell root
~ BlockSignatures signatures
+ Cell toCell()
+ {static} BlockProof deserialize(CellSlice)
}


class org.ton.java.tlb.types.GasLimitsPricesExt {
~ long magic
~ BigInteger gasPrice
~ BigInteger gasLimit
~ BigInteger specialGasLimit
~ BigInteger gasCredit
~ BigInteger blockGasLimit
~ BigInteger freezeDueLimit
~ BigInteger deleteDueLimit
+ Cell toCell()
+ {static} GasLimitsPricesExt deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams1 {
~ Address electorAddr
+ Cell toCell()
+ {static} ConfigParams1 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams36 {
~ ValidatorSet nextValidatorSet
+ Cell toCell()
+ {static} ConfigParams36 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams7 {
~ TonHashMapE extraCurrencies
+ Cell toCell()
+ {static} ConfigParams7 deserialize(CellSlice)
}


class org.ton.java.tlb.types.LibDescr {
~ long magic
~ Cell lib
~ TonHashMap publishers
- String getMagic()
+ Cell toCell()
+ {static} LibDescr deserialize(CellSlice)
}


class org.ton.java.tlb.types.ComputePhaseVM {
~ int magic
~ boolean success
~ boolean msgStateUsed
~ boolean accountActivated
~ BigInteger gasFees
~ ComputePhaseVMDetails details
- String getMagic()
+ Cell toCell()
+ {static} ComputePhase deserialize(CellSlice)
}


class org.ton.java.tlb.types.KeyMaxLt {
~ BigInteger endLt
~ int seqno
~ BigInteger rootHash
~ BigInteger fileHash
- String getRootHash()
- String getFileHash()
+ Cell toCell()
+ {static} KeyMaxLt deserialize(CellSlice)
}


class org.ton.java.tlb.types.WcSplitMergeTimings {
~ int magic
~ long splitMergeDelay
~ long splitMergeInterval
~ long minSplitMergeInterval
~ long minSplitMergeDelay
+ Cell toCell()
+ {static} WcSplitMergeTimings deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams11 {
~ ConfigVotingSetup configVotingSetup
+ Cell toCell()
+ {static} ConfigParams11 deserialize(CellSlice)
}


interface org.ton.java.tlb.types.ValidatorSet {
~ Cell toCell()
~ {static} ValidatorSet deserialize(CellSlice)
}

class org.ton.java.tlb.types.BlockIdExtShardIdent {
~ ShardIdent shardId
~ long seqno
+ BigInteger rootHash
+ BigInteger fileHash
+ String getRootHash()
+ String getFileHash()
+ Cell toCell()
+ {static} BlockIdExtShardIdent deserialize(CellSlice)
}


class org.ton.java.tlb.types.InternalMessage {
~ int magic
~ boolean iHRDisabled
~ boolean bounce
~ boolean bounced
~ MsgAddressInt srcAddr
~ MsgAddressInt dstAddr
~ CurrencyCollection value
~ BigInteger iHRFee
~ BigInteger fwdFee
~ BigInteger createdLt
~ long createdAt
- String getMagic()
+ Cell toCell()
+ {static} InternalMessage deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockHandle {
~ BigInteger offset
~ BigInteger size
+ {static} BlockHandle deserialize(CellSlice)
}


class org.ton.java.tlb.types.DepthBalanceInfo {
~ int depth
~ CurrencyCollection currencies
+ Cell toCell()
+ {static} DepthBalanceInfo deserialize(CellSlice)
}


interface org.ton.java.tlb.types.AccountState {
+ Cell toCell()
}

class org.ton.java.tlb.types.BlockExtra {
~ InMsgDescr inMsgDesc
~ OutMsgDescr outMsgDesc
~ TonHashMapAugE shardAccountBlocks
~ BigInteger randSeed
~ BigInteger createdBy
~ McBlockExtra mcBlockExtra
- String getRandSeed()
- String getCreatedBy()
+ String toJson()
+ Cell toCell()
+ {static} BlockExtra deserialize(CellSlice)
}


class org.ton.java.tlb.types.HashUpdate {
~ int magic
~ BigInteger oldHash
~ BigInteger newHash
- String getMagic()
- String getOldHash()
- String getNewHash()
+ Cell toCell()
+ {static} HashUpdate deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams31 {
~ TonHashMapE fundamentalSmcAddr
+ Cell toCell()
+ {static} ConfigParams31 deserialize(CellSlice)
}


class org.ton.java.tlb.types.StorageUsed {
~ BigInteger bitsUsed
~ BigInteger cellsUsed
~ BigInteger publicCellsUsed
+ Cell toCell()
+ {static} StorageUsed deserialize(CellSlice)
}


class org.ton.java.tlb.types.Block {
~ long magic
~ int globalId
~ BlockInfo blockInfo
~ ValueFlow valueFlow
~ MerkleUpdate stateUpdate
~ BlockExtra extra
+ Cell toCell()
+ {static} Block deserialize(CellSlice)
}


class org.ton.java.tlb.types.JettonBridgeParamsV1 {
~ int magic
~ Address bridgeAddress
~ Address oracleAddress
~ TonHashMapE oracles
~ int stateFlags
~ BigInteger burnBridgeFee
+ Cell toCell()
+ {static} JettonBridgeParamsV1 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams28 {
~ CatchainConfig catchainConfig
+ Cell toCell()
+ {static} ConfigParams28 deserialize(CellSlice)
}


interface org.ton.java.tlb.types.MsgAddressInt {
~ Cell toCell()
~ Address toAddress()
~ {static} MsgAddressInt deserialize(CellSlice)
}

class org.ton.java.tlb.types.McBlockExtraInfo {
~ TonHashMapE prevBlkSignatures
~ InMsg recoverCreateMsg
~ InMsg mintMsg
+ Cell toCell()
+ {static} McBlockExtraInfo deserialize(CellSlice)
}


enum org.ton.java.tlb.types.AccountStates {
+  UNINIT
+  FROZEN
+  ACTIVE
+  NON_EXIST
}

interface org.ton.java.tlb.types.BlockCreateStats {
+ Cell toCell()
+ {static} BlockCreateStats deserialize(CellSlice)
}

class org.ton.java.tlb.types.ConsensusConfigNew {
~ int magic
~ int flags
~ boolean newCatchainIds
~ int roundCandidates
~ long nextCandidateDelayMs
~ long consensusTimeoutMs
~ long fastAttempts
~ long attemptDuration
~ long catchainNaxDeps
~ long maxBlockBytes
~ long maxCollatedBytes
+ Cell toCell()
+ {static} ConsensusConfigNew deserialize(CellSlice)
}


class org.ton.java.tlb.types.AllShardsInfo {
~ TonHashMap shardHashes
}

class org.ton.java.tlb.types.TransactionDescriptionSplitPrepare {
~ int magic
~ SplitMergeInfo splitInfo
~ StoragePhase storagePhase
~ ComputePhase computePhase
~ ActionPhase actionPhase
~ boolean aborted
~ boolean destroyed
- String getMagic()
+ Cell toCell()
+ {static} TransactionDescriptionSplitPrepare deserialize(CellSlice)
}


class org.ton.java.tlb.types.InMsgDescr {
~ TonHashMapAugE inMsg
+ Cell toCell()
+ {static} InMsgDescr deserialize(CellSlice)
+ long getCount()
}


class org.ton.java.tlb.types.CryptoSignaturePair {
~ BigInteger nodeIdShort
~ CryptoSignature sign
+ Cell toCell()
+ {static} CryptoSignaturePair deserialize(CellSlice)
}


class org.ton.java.tlb.types.StoragePhase {
~ BigInteger storageFeesCollected
~ BigInteger storageFeesDue
~ AccStatusChange statusChange
+ Cell toCell()
+ {static} StoragePhase deserialize(CellSlice)
}


class org.ton.java.tlb.types.MsgAddressIntStd {
~ int magic
~ Anycast anycast
~ int addrLen
~ byte workchainId
~ BigInteger address
+ String toString()
+ Cell toCell()
+ {static} MsgAddressIntStd deserialize(CellSlice)
+ Address toAddress()
}


class org.ton.java.tlb.types.ValidatorInfo {
~ long validatorListHashShort
~ long catchainSeqno
~ boolean nXCcUpdated
+ Cell toCell()
+ {static} ValidatorInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.CreditPhase {
~ BigInteger dueFeesCollected
~ CurrencyCollection credit
+ Cell toCell()
+ {static} CreditPhase deserialize(CellSlice)
}


class org.ton.java.tlb.types.BouncePhaseNegFounds {
~ int magic
+ Cell toCell()
+ {static} BouncePhaseNegFounds deserialize(CellSlice)
}


class org.ton.java.tlb.types.McStateExtraInfo {
~ BigInteger flags
~ ValidatorInfo validatorInfo
~ TonHashMapAugE prevBlocks
~ Boolean afterKeyBlock
~ ExtBlkRef lastKeyBlock
~ BlockCreateStats blockCreateStats
+ Cell toCell()
+ {static} McStateExtraInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.TransactionDescriptionSplitInstall {
~ int magic
~ SplitMergeInfo splitInfo
~ Transaction prepareTransaction
~ boolean installed
- String getMagic()
+ Cell toCell()
+ {static} TransactionDescriptionSplitInstall deserialize(CellSlice)
}


class org.ton.java.tlb.types.MessagesList {
~ TonHashMapE list
+ {static} MessagesList deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams8 {
~ GlobalVersion globalVersion
+ Cell toCell()
+ {static} ConfigParams8 deserialize(CellSlice)
}


interface org.ton.java.tlb.types.ValidatorDescr {
~ Cell toCell()
~ {static} ValidatorDescr deserialize(CellSlice)
}

class org.ton.java.tlb.types.ValidatorAddr {
~ int magic
~ SigPubKey publicKey
~ BigInteger weight
~ BigInteger adnlAddr
- String getMagic()
- String getAdnlAddr()
+ Cell toCell()
+ {static} ValidatorAddr deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams45 {
~ int magic
~ TonHashMapE precompiledContractsList
~ long suspendedUntil
+ Cell toCell()
+ {static} ConfigParams45 deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutMsgExt {
~ int magic
~ Message msg
~ Transaction transaction
+ Cell toCell()
+ {static} OutMsgExt deserialize(CellSlice)
}


class org.ton.java.tlb.types.Account {
~ boolean isNone
~ MsgAddressInt address
~ StorageInfo storageInfo
~ AccountStorage accountStorage
+ Cell toCell()
+ {static} Account deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardStateInfo {
~ BigInteger overloadHistory
~ BigInteger underloadHistory
~ CurrencyCollection totalBalance
~ CurrencyCollection totalValidatorFees
~ TonHashMapE libraries
~ ExtBlkRef masterRef
+ Cell toCell()
+ {static} ShardStateInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardState {
~ long magic
~ ShardStateUnsplit left
~ ShardStateUnsplit right
- String getMagic()
+ Cell toCell()
+ {static} ShardState deserialize(CellSlice)
}


class org.ton.java.tlb.types.MsgAddressExternal {
~ int magic
~ int len
+ BigInteger externalAddress
+ String toString()
+ Cell toCell()
+ {static} MsgAddressExternal deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardStateUnsplit {
~ long magic
~ int globalId
~ ShardIdent shardIdent
~ long seqno
~ long vertSeqno
~ long genUTime
~ BigInteger genLt
~ long minRefMCSeqno
~ Cell outMsgQueueInfo
~ boolean beforeSplit
~ Cell shardAccounts
~ ShardStateInfo shardStateInfo
~ McStateExtra custom
- String getMagic()
+ Cell toCell()
+ {static} ShardStateUnsplit deserialize(CellSlice)
}


class org.ton.java.tlb.types.CreatorStats {
~ long magic
~ Counters mcBlocks
~ Counters shardBlocks
+ Cell toCell()
+ {static} CreatorStats deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams12 {
~ TonHashMapE workchains
+ Cell toCell()
+ {static} ConfigParams12 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ValidatorBaseInfo {
~ int magic
~ long validatorListHashShort
~ long catchainSeqno
+ Cell toCell()
+ {static} ValidatorBaseInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.OldMcBlocksInfo {
~ TonHashMapAugE list
+ Cell toCell()
+ {static} OldMcBlocksInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams6 {
~ BigInteger mintNewPrice
~ BigInteger mintAddPrice
+ Cell toCell()
+ {static} ConfigParams6 deserialize(CellSlice)
}


class org.ton.java.tlb.types.KeyExtBlkRef {
~ boolean key
~ ExtBlkRef blkRef
+ Cell toCell()
+ {static} KeyExtBlkRef deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams35 {
~ ValidatorSet currTempValidatorSet
+ Cell toCell()
+ {static} ConfigParams35 deserialize(CellSlice)
}


class org.ton.java.tlb.types.IntermediateAddressRegular {
~ int use_dest_bits
+ Cell toCell()
}


class org.ton.java.tlb.types.GasLimitsPricesOrdinary {
~ long magic
~ BigInteger gasPrice
~ BigInteger gasLimit
~ BigInteger gasCredit
~ BigInteger blockGasLimit
~ BigInteger freezeDueLimit
~ BigInteger deleteDueLimit
+ Cell toCell()
+ {static} GasLimitsPricesOrdinary deserialize(CellSlice)
}


interface org.ton.java.tlb.types.GasLimitsPrices {
~ Cell toCell()
~ {static} GasLimitsPrices deserialize(CellSlice)
}

class org.ton.java.tlb.types.AccountStorage {
~ String accountStatus
~ BigInteger lastTransactionLt
~ CurrencyCollection balance
~ AccountState accountState
+ Cell toCell()
+ {static} AccountStorage deserialize(CellSlice)
}


class org.ton.java.tlb.types.Transaction {
~ int magic
~ BigInteger accountAddr
~ BigInteger lt
~ BigInteger prevTxHash
~ BigInteger prevTxLt
~ long now
~ long outMsgCount
~ AccountStates origStatus
~ AccountStates endStatus
~ TransactionIO inOut
~ CurrencyCollection totalFees
~ HashUpdate stateUpdate
~ TransactionDescription description
~ byte[] hash
- String getMagic()
- String getAccountAddr()
- String getPrevTxHash()
+ void dump()
+ Cell toCell()
+ {static} Transaction deserialize(CellSlice)
+ {static} Cell serializeAccountState(AccountStates)
+ {static} AccountStates deserializeAccountState(byte)
}


class org.ton.java.tlb.types.ConfigParams16 {
~ long maxValidators
~ long maxMainValidators
~ long minValidators
+ Cell toCell()
+ {static} ConfigParams16 deserialize(CellSlice)
}


class org.ton.java.tlb.types.TickTock {
~ boolean tick
~ boolean tock
+ Cell toCell()
+ {static} TickTock deserialize(CellSlice)
}


class org.ton.java.tlb.types.IntermediateAddressSimple {
~ int workchainId
~ BigInteger addrPfx
+ Cell toCell()
}


class org.ton.java.tlb.types.SizeLimitsConfigV2 {
~ int magic
~ long maxMsgBits
~ long maxMsgCells
~ long maxLibraryCells
~ int maxVmDataDepth
~ long maxExtMsgSize
~ int maxExtMsgDepth
~ long maxAccStateCells
~ long maxAccStateBits
+ Cell toCell()
+ {static} SizeLimitsConfigV2 deserialize(CellSlice)
}


class org.ton.java.tlb.types.AccountHelper {
~ boolean isActive
~ Account state
~ Cell data
~ Cell code
~ BigInteger lastTxLt
~ byte[] lastTxHash
+ boolean hasGetMethod(String)
+ {static} long methodNameHash(String)
}


class org.ton.java.tlb.types.ConsensusConfigV4 {
~ int magic
~ int flags
~ boolean newCatchainIds
~ int roundCandidates
~ long nextCandidateDelayMs
~ long consensusTimeoutMs
~ long fastAttempts
~ long attemptDuration
~ long catchainNaxDeps
~ long maxBlockBytes
~ long maxCollatedBytes
~ int protoVersion
~ long catchainMaxBlocksCoeff
+ Cell toCell()
+ {static} ConsensusConfigV4 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams23 {
~ BlockLimits configBlockLimits
+ Cell toCell()
+ {static} ConfigParams23 deserialize(CellSlice)
}


class org.ton.java.tlb.types.SigPubKey {
~ long magic
~ BigInteger pubkey
+ Cell toCell()
+ {static} SigPubKey deserialize(CellSlice)
}


class org.ton.java.tlb.types.SplitMergeInfo {
~ int curShardPfxLen
~ int accSplitDepth
~ BigInteger thisAddr
~ BigInteger siblingAddr
+ Cell toCell()
+ {static} SplitMergeInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutMsgDeqShort {
~ int magic
~ BigInteger msgEnvHash
~ long nextWorkchain
~ BigInteger nextAddrPfx
~ BigInteger importBlockLt
+ Cell toCell()
+ {static} OutMsgDeqShort deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams71 {
~ OracleBridgeParams ethereumBridge
+ Cell toCell()
+ {static} ConfigParams71 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ExternalMessageOutInfo {
~ long magic
~ MsgAddressInt srcAddr
~ MsgAddressExt dstAddr
~ BigInteger createdLt
~ long createdAt
- String getMagic()
+ Cell toCell()
+ {static} ExternalMessageOutInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.AnyMessage {
~ Cell payload
~ Address senderAddr
~ Address destAddr
+ Cell toCell()
+ {static} AnyMessage deserialize(CellSlice)
}


class org.ton.java.tlb.types.ComputeSkipReason {
~ String type
+ Cell toCell()
+ {static} ComputePhase deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardFeeCreated {
~ CurrencyCollection fees
~ CurrencyCollection create
+ Cell toCell()
+ {static} ShardFeeCreated deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams24 {
~ MsgForwardPrices configMcFwdPrices
+ Cell toCell()
+ {static} ConfigParams24 deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutMsgTrReq {
~ int magic
~ MsgEnvelope msg
~ InMsg imported
+ Cell toCell()
+ {static} OutMsgTrReq deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams3 {
~ Address feeCollectorAddr
+ Cell toCell()
+ {static} ConfigParams3 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ActionReserveCurrency {
~ long magic
~ int mode
~ CurrencyCollection currency
+ Cell toCell()
+ {static} ActionReserveCurrency deserialize(CellSlice)
}


class org.ton.java.tlb.types.Boc {
~ long magic
~ boolean hasIdx
~ boolean hasCrc32c
~ boolean hasCacheBits
~ boolean hasTopHash
~ boolean hasIntHashes
~ int size
~ int offBytes
~ int cells
~ int roots
~ int absent
~ int totalCellsSize
~ List<BigInteger> rootList
~ List<BigInteger> index
~ byte[] cellData
~ long crc32c
+ Cell toCell()
+ {static} Boc deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardFees {
~ TonHashMapAugE shardFees
+ Cell toCell()
+ {static} ShardFees deserialize(CellSlice)
}


class org.ton.java.tlb.types.GlobalVersion {
~ long magic
~ long version
~ BigInteger capabilities
- String getMagic()
+ Cell toCell()
+ {static} GlobalVersion deserialize(CellSlice)
}


class org.ton.java.tlb.types.TransactionDescriptionOrdinary {
~ int magic
~ boolean creditFirst
~ StoragePhase storagePhase
~ CreditPhase creditPhase
~ ComputePhase computePhase
~ ActionPhase actionPhase
~ boolean aborted
~ BouncePhase bouncePhase
~ boolean destroyed
- String getMagic()
+ Cell toCell()
+ {static} TransactionDescriptionOrdinary deserialize(CellSlice)
}


class org.ton.java.tlb.types.TransactionIO {
~ Message in
~ TonHashMapE out
+ Cell toCell()
+ {static} TransactionIO deserialize(CellSlice)
}


class org.ton.java.tlb.types.OracleBridgeParams {
~ Address bridgeAddress
~ Address oracleMultiSigAddress
~ TonHashMapE oracles
~ BigInteger externalChainAddress
+ Cell toCell()
+ {static} OracleBridgeParams deserialize(CellSlice)
}


class org.ton.java.tlb.types.AccStatusChange {
~ String type
+ Cell toCell()
+ {static} AccStatusChange deserialize(CellSlice)
}


class org.ton.java.tlb.types.WorkchainDescrV2 {
~ int workchain
~ long enabledSince
~ int actualMinSplit
~ int minSplit
~ int maxSplit
~ boolean basic
~ boolean active
~ boolean acceptMsgs
~ int flags
~ BigInteger zeroStateRootHash
~ BigInteger zeroStateFileHash
~ long version
~ WorkchainFormat format
~ WcSplitMergeTimings wcSplitMergeTimings
+ Cell toCell()
+ {static} WorkchainDescrV2 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardIdent {
~ long magic
~ long prefixBits
~ int workchain
~ BigInteger shardPrefix
- String getMagic()
+ Cell toCell()
+ {static} ShardIdent deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutMsgQueueInfo {
~ TonHashMapAugE outMsgQueue
~ TonHashMapE processedInfo
~ TonHashMapE ihrPendingInfo
+ Cell toCell()
+ {static} OutMsgQueueInfo deserialize(CellSlice)
}


interface org.ton.java.tlb.types.ComputePhase {
~ Cell toCell()
~ {static} ComputePhase deserialize(CellSlice)
}

class org.ton.java.tlb.types.OutMsgImm {
~ int magic
~ MsgEnvelope msg
~ Transaction transaction
~ InMsg reimport
+ Cell toCell()
+ {static} OutMsgImm deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams72 {
~ OracleBridgeParams binanceSmartChainBridge
+ Cell toCell()
+ {static} ConfigParams72 deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockCreateStatsExt {
~ TonHashMapAugE list
+ Cell toCell()
+ {static} BlockCreateStatsExt deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutList {
~ List<OutAction> actions
+ Cell toCell()
+ {static} OutList deserialize(CellSlice)
}


class org.ton.java.tlb.types.ActionSendMsg {
~ long magic
~ int mode
~ MessageRelaxed outMsg
+ Cell toCell()
+ {static} ActionSendMsg deserialize(CellSlice)
}


class org.ton.java.tlb.types.MerkleUpdate {
~ BigInteger oldHash
~ BigInteger newHash
~ ShardState oldShardState
~ ShardState newShardState
+ Cell toCell()
+ {static} MerkleUpdate deserialize(CellSlice)
- String getOldHash()
- String getNewHash()
}


class org.ton.java.tlb.types.InMsgImportImm {
~ MsgEnvelope inMsg
~ Transaction transaction
~ BigInteger fwdFee
+ Cell toCell()
+ {static} InMsgImportImm deserialize(CellSlice)
}


class org.ton.java.tlb.types.ActionSetCode {
~ long magic
~ Cell newCode
+ Cell toCell()
+ {static} ActionSetCode deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutMsgNew {
~ int magic
~ MsgEnvelope outMsg
~ Transaction transaction
+ Cell toCell()
+ {static} OutMsgNew deserialize(CellSlice)
}


class org.ton.java.tlb.types.CatchainConfigC2 {
~ int magic
~ int flags
~ boolean shuffleMcValidators
~ long mcCatchainLifetime
~ long shardCatchainLifetime
~ long shardValidatorsLifetime
~ long shardValidatorsNum
+ Cell toCell()
+ {static} CatchainConfigC2 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams81 {
~ JettonBridgeParams bnbTonTokenBridge
+ Cell toCell()
+ {static} ConfigParams81 deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockSignaturesPure {
~ long sigCount
~ BigInteger sigWeight
~ TonHashMapE signatures
+ Cell toCell()
+ {static} BlockSignaturesPure deserialize(CellSlice)
}


class org.ton.java.tlb.types.AccountStateUninit {
~ int magic
+ Cell toCell()
+ {static} AccountStateUninit deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutMsgDescr {
~ TonHashMapAugE outMsg
+ Cell toCell()
+ {static} OutMsgDescr deserialize(CellSlice)
+ long getCount()
}


class org.ton.java.tlb.types.ConfigParams39 {
~ TonHashMapE validatorSignedTemp
+ Cell toCell()
+ {static} ConfigParams39 deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlkPrevInfo {
~ ExtBlkRef prev1
~ ExtBlkRef prev2
+ Cell toCell(boolean)
+ {static} BlkPrevInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.CatchainConfigC1 {
~ int magic
~ long mcCatchainLifetime
~ long shardCatchainLifetime
~ long shardValidatorsLifetime
~ long shardValidatorsNum
+ Cell toCell()
+ {static} CatchainConfigC1 deserialize(CellSlice)
}


class org.ton.java.tlb.types.TransactionDescriptionTickTock {
~ int magic
~ boolean isTock
~ StoragePhase storagePhase
~ ComputePhase computePhase
~ ActionPhase actionPhase
~ boolean aborted
~ boolean destroyed
- String getMagic()
+ Cell toCell()
+ {static} TransactionDescriptionTickTock deserialize(CellSlice)
}


interface org.ton.java.tlb.types.OutMsg {
~ Cell toCell()
~ {static} OutMsg deserialize(CellSlice)
}

class org.ton.java.tlb.types.ValueFlow {
~ long magic
~ CurrencyCollection fromPrevBlk
~ CurrencyCollection toNextBlk
~ CurrencyCollection imported
~ CurrencyCollection exported
~ CurrencyCollection feesCollected
~ CurrencyCollection burned
~ CurrencyCollection feesImported
~ CurrencyCollection recovered
~ CurrencyCollection created
~ CurrencyCollection minted
- String getMagic()
+ Cell toCell()
+ {static} ValueFlow deserialize(CellSlice)
}


class org.ton.java.tlb.types.Message {
~ String msgType
~ CommonMsgInfo info
~ StateInit init
~ Cell body
+ Cell toCell()
+ {static} Message deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams4 {
~ Address dnsRootAddr
+ Cell toCell()
+ {static} ConfigParams4 deserialize(CellSlice)
}


class org.ton.java.tlb.types.CommonMsg {
}
class org.ton.java.tlb.types.WorkchainFormatExt {
~ int wfmtExt
~ int minAddrLen
~ int maxAddrLen
~ int addrLenStep
~ long workchainTypeId
+ Cell toCell(boolean)
+ {static} WorkchainFormatExt deserialize(CellSlice)
}


class org.ton.java.tlb.types.ImportFees {
~ BigInteger feesCollected
~ CurrencyCollection valueImported
+ Cell toCell()
+ {static} ImportFees deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams33 {
~ ValidatorSet prevTempValidatorSet
+ Cell toCell()
+ {static} ConfigParams33 deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockData {
}
class org.ton.java.tlb.types.MsgEnvelope {
~ int magic
~ IntermediateAddress currAddr
~ IntermediateAddress nextAddr
~ BigInteger fwdFeeRemaining
~ Message msg
+ Cell toCell()
+ {static} MsgEnvelope deserialize(CellSlice)
}


class org.ton.java.tlb.types.ValidatorTempKey {
~ int magic
~ BigInteger adnlAddr
~ SigPubKey tempPublicKey
~ long seqno
~ long validUntil
+ Cell toCell()
+ {static} ValidatorTempKey deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams14 {
~ long magic
~ BigInteger masterchainBlockFee
~ BigInteger basechainBlockFee
+ Cell toCell()
+ {static} ConfigParams14 deserialize(CellSlice)
}


interface org.ton.java.tlb.types.OutAction {
~ Cell toCell()
~ {static} OutAction deserialize(CellSlice)
}

class org.ton.java.tlb.types.StoragePrices {
~ long magic
~ long utimeSince
~ BigInteger bitPricePs
~ BigInteger cellPricePs
~ BigInteger mcBitPricePs
~ BigInteger mcCellPricePs
+ Cell toCell()
+ {static} StoragePrices deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockSignatures {
~ int magic
~ ValidatorBaseInfo validatorBaseInfo
~ BlockSignaturesPure pureSignatures
+ Cell toCell()
+ {static} BlockSignatures deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigProposalSetup {
~ int cfgVoteCfg
~ int minTotRounds
~ int maxTotRounds
~ int minWins
~ int maxLosses
~ int minStoreSec
~ int maxStoreSec
~ int bitPrice
~ int cellPrice
+ Cell toCell()
+ {static} ConfigProposalSetup deserialize(CellSlice)
}


class org.ton.java.tlb.types.TransactionShortInfo {
~ BigInteger lt
~ BigInteger hash
~ BigInteger accountId
}

class org.ton.java.tlb.types.PrecompiledSmc {
~ int magic
~ BigInteger gasUsage
+ Cell toCell()
+ {static} PrecompiledSmc deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams15 {
~ long validatorsElectedFor
~ long electionsStartBefore
~ long electionsEndBefore
~ long stakeHeldFor
+ Cell toCell()
+ {static} ConfigParams15 deserialize(CellSlice)
}


class org.ton.java.tlb.types.WorkchainFormatBasic {
~ int wfmtBasic
~ long vmVersion
~ BigInteger vmMode
+ Cell toCell(boolean)
+ {static} WorkchainFormatBasic deserialize(CellSlice)
}


class org.ton.java.tlb.types.BouncePhaseNoFounds {
~ int magic
~ StorageUsedShort msgSize
~ BigInteger reqFwdFees
- String getMagic()
+ Cell toCell()
+ {static} BouncePhaseNoFounds deserialize(CellSlice)
}


interface org.ton.java.tlb.types.MsgAddress {
~ Cell toCell()
~ {static} MsgAddress deserialize(CellSlice)
}

class org.ton.java.tlb.types.ConsensusConfigV3 {
~ int magic
~ int flags
~ boolean newCatchainIds
~ int roundCandidates
~ long nextCandidateDelayMs
~ long consensusTimeoutMs
~ long fastAttempts
~ long attemptDuration
~ long catchainNaxDeps
~ long maxBlockBytes
~ long maxCollatedBytes
~ int protoVersion
+ Cell toCell()
+ {static} ConsensusConfigV3 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ShardAccounts {
~ TonHashMapAugE shardAccounts
+ Cell toCell()
+ {static} ShardAccounts deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams9 {
~ TonHashMap mandatoryParams
+ Cell toCell()
+ {static} ConfigParams9 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ParamLimits {
~ int magic
~ long underload
~ long softLimit
+ Cell toCell()
+ {static} ParamLimits deserialize(CellSlice)
}


class org.ton.java.tlb.types.MsgAddressIntVar {
~ int magic
~ Anycast anycast
~ int addrLen
~ int workchainId
~ BigInteger address
+ String toString()
+ Cell toCell()
+ {static} MsgAddressIntVar deserialize(CellSlice)
+ Address toAddress()
}


class org.ton.java.tlb.types.MessageRelaxed {
~ CommonMsgInfoRelaxed info
~ StateInit init
~ Cell body
+ Cell toCell()
+ {static} MessageRelaxed deserialize(CellSlice)
}


class org.ton.java.tlb.types.Counters {
~ long lastUpdated
~ BigInteger total
~ BigInteger cnt2048
~ BigInteger cnt65536
+ Cell toCell()
+ {static} Counters deserialize(CellSlice)
}


interface org.ton.java.tlb.types.CommonMsgInfoRelaxed {
~ Cell toCell()
~ {static} CommonMsgInfoRelaxed deserialize(CellSlice)
}

class org.ton.java.tlb.types.OutMsgDeqImm {
~ int magic
~ MsgEnvelope msg
~ InMsg reimport
+ Cell toCell()
+ {static} OutMsgDeqImm deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams32 {
~ ValidatorSet prevValidatorSet
+ Cell toCell()
+ {static} ConfigParams32 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams13 {
~ long magic
~ BigInteger deposit
~ BigInteger bitPrice
~ BigInteger cellPrice
+ Cell toCell()
+ {static} ConfigParams13 deserialize(CellSlice)
}


class org.ton.java.tlb.types.EnqueuedMsg {
~ BigInteger enqueuedLt
~ MsgEnvelope outMsg
+ Cell toCell()
+ {static} EnqueuedMsg deserialize(CellSlice)
}


class org.ton.java.tlb.types.Validators {
~ int magic
~ long uTimeSince
~ long uTimeUntil
~ int total
~ int main
~ TonHashMap list
- String getMagic()
+ Cell toCell()
+ {static} Validators deserialize(CellSlice)
}


class org.ton.java.tlb.types.InMsgDiscardTr {
~ MsgEnvelope inMsg
~ BigInteger transactionId
~ BigInteger fwdFee
~ Cell proofDelivered
+ Cell toCell()
+ {static} InMsgDiscardTr deserialize(CellSlice)
}


class org.ton.java.tlb.types.McBlockExtra {
~ long magic
~ boolean keyBlock
~ TonHashMapE shardHashes
~ TonHashMapAugE shardFees
~ McBlockExtraInfo info
~ ConfigParams config
- String getMagic()
+ Cell toCell()
+ {static} McBlockExtra deserialize(CellSlice)
}


class org.ton.java.tlb.types.SizeLimitsConfigV1 {
~ int magic
~ long maxMsgBits
~ long maxMsgCells
~ long maxLibraryCells
~ int maxVmDataDepth
~ long maxExtMsgSize
~ int maxExtMsgDepth
+ Cell toCell()
+ {static} SizeLimitsConfigV1 deserialize(CellSlice)
}


interface org.ton.java.tlb.types.WorkchainDescr {
~ Cell toCell()
~ {static} WorkchainDescr deserialize(CellSlice)
}

class org.ton.java.tlb.types.GasLimitsPricesPfx {
~ long magic
~ BigInteger flatGasLimit
~ BigInteger flatGasPrice
~ GasLimitsPrices other
+ Cell toCell()
+ {static} GasLimitsPricesPfx deserialize(CellSlice)
}


interface org.ton.java.tlb.types.JettonBridgeParams {
~ Cell toCell()
~ {static} JettonBridgeParams deserialize(CellSlice)
}

class org.ton.java.tlb.types.JettonBridgeParamsV2 {
~ int magic
~ Address bridgeAddress
~ Address oracleAddress
~ TonHashMapE oracles
~ int stateFlags
~ JettonBridgePrices prices
~ BigInteger externalChainAddress
+ Cell toCell()
+ {static} JettonBridgeParamsV2 deserialize(CellSlice)
}


class org.ton.java.tlb.types.InMsgImportExt {
~ Message msg
~ Transaction transaction
+ Cell toCell()
+ {static} InMsgImportExt deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams29 {
~ ConsensusConfig consensusConfig
+ Cell toCell()
+ {static} ConfigParams29 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams34 {
~ ValidatorSet currValidatorSet
+ Cell toCell()
+ {static} ConfigParams34 deserialize(CellSlice)
}


class org.ton.java.tlb.types.WorkchainDescrV1 {
~ int workchain
~ long enabledSince
~ int actualMinSplit
~ int minSplit
~ int maxSplit
~ boolean basic
~ boolean active
~ boolean acceptMsgs
~ int flags
~ BigInteger zeroStateRootHash
~ BigInteger zeroStateFileHash
~ long version
~ WorkchainFormat format
+ Cell toCell()
+ {static} WorkchainDescrV1 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams79 {
~ JettonBridgeParams ethTonTokenBridge
+ Cell toCell()
+ {static} ConfigParams79 deserialize(CellSlice)
}


interface org.ton.java.tlb.types.BouncePhase {
~ Cell toCell()
~ {static} BouncePhase deserialize(CellSlice)
}

class org.ton.java.tlb.types.ConfigParams5 {
~ long magic
~ Address blackholerAddr
~ long feeBurnNum
~ long feeBurnDenom
+ Cell toCell()
+ {static} ConfigParams5 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConsensusConfigV1 {
~ int magic
~ int roundCandidates
~ long nextCandidateDelayMs
~ long consensusTimeoutMs
~ long fastAttempts
~ long attemptDuration
~ long catchainNaxDeps
~ long maxBlockBytes
~ long maxCollatedBytes
+ Cell toCell()
+ {static} ConsensusConfigV1 deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockIdExt {
~ int workchain
~ long shard
~ long seqno
~ BigInteger rootHash
~ BigInteger fileHash
- String getRootHash()
- String getFileHash()
+ String getShard()
+ Cell toCell()
+ {static} BlockIdExt deserialize(CellSlice)
}


class org.ton.java.tlb.types.IntermediateAddressExt {
~ long workchainId
~ BigInteger addrPfx
+ Cell toCell()
}


class org.ton.java.tlb.types.ShardAccount {
~ Account account
~ BigInteger lastTransHash
~ BigInteger lastTransLt
+ Cell toCell()
+ {static} ShardAccount deserialize(CellSlice)
}


interface org.ton.java.tlb.types.WorkchainFormat {
~ Cell toCell(boolean)
~ {static} WorkchainFormat deserialize(CellSlice,boolean)
}

class org.ton.java.tlb.types.ConfigParams73 {
~ OracleBridgeParams polygonBridge
+ Cell toCell()
+ {static} ConfigParams73 deserialize(CellSlice)
}


class org.ton.java.tlb.types.TransactionDescriptionStorage {
~ int magic
~ StoragePhase storagePhase
- String getMagic()
+ Cell toCell()
+ {static} TransactionDescriptionStorage deserialize(CellSlice)
}


class org.ton.java.tlb.types.SigPubKeyED25519 {
~ long magic
~ byte[] key
- String getMagic()
+ {static} SigPubKeyED25519 deserialize(CellSlice)
}


class org.ton.java.tlb.types.McStateExtra {
~ long magic
~ TonHashMapE shardHashes
~ ConfigParams configParams
~ McStateExtraInfo info
~ CurrencyCollection globalBalance
- String getMagic()
+ Cell toCell()
+ {static} McStateExtra deserialize(CellSlice)
}


class org.ton.java.tlb.types.ValidatorsExt {
~ long magic
~ long uTimeSince
~ long uTimeUntil
~ int total
~ int main
~ BigInteger totalWeight
~ TonHashMapE list
+ Cell toCell()
+ {static} Validators deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutMsgDeq {
~ int magic
~ MsgEnvelope outMsg
~ BigInteger importBlockLt
+ Cell toCell()
+ {static} OutMsgDeq deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams0 {
~ Address configAddr
+ Cell toCell()
+ {static} ConfigParams0 deserialize(CellSlice)
}


class org.ton.java.tlb.types.BlockInfo {
~ long magic
~ long version
~ boolean notMaster
~ boolean afterMerge
~ boolean beforeSplit
~ boolean afterSplit
~ boolean wantSplit
~ boolean wantMerge
~ boolean keyBlock
~ boolean vertSeqnoIncr
~ long flags
~ long seqno
~ long vertSeqno
~ ShardIdent shard
~ long genuTime
~ BigInteger startLt
~ BigInteger endLt
~ long genValidatorListHashShort
~ long genCatchainSeqno
~ long minRefMcSeqno
~ long prevKeyBlockSeqno
~ GlobalVersion globalVersion
~ ExtBlkRef masterRef
~ BlkPrevInfo prefRef
~ BlkPrevInfo prefVertRef
- String getMagic()
+ Cell toCell()
+ {static} BlockInfo deserialize(CellSlice)
- {static} BlkPrevInfo loadBlkPrevInfo(CellSlice,boolean)
}


class org.ton.java.tlb.types.Text {
- {static} int MaxTextChunkSize
~ int maxFirstChunkSize
~ String value
- byte[] val
- int chunksNum
+ Cell toCell()
+ {static} Text deserialize(CellSlice)
- CellBuilder f(int)
}


interface org.ton.java.tlb.types.InMsg {
+ Cell toCell()
+ {static} InMsg deserialize(CellSlice)
}

class org.ton.java.tlb.types.ConfigParams82 {
~ JettonBridgeParams polygonTonTokenBridge
+ Cell toCell()
+ {static} ConfigParams82 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams44 {
~ int magic
~ TonHashMapE suspendedAddressList
~ long suspendedUntil
+ Cell toCell()
+ {static} ConfigParams44 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ProcessedUpto {
~ BigInteger lastMsgLt
~ BigInteger lastMsgHash
+ Cell toCell()
+ {static} ProcessedUpto deserialize(CellSlice)
}


class org.ton.java.tlb.types.StorageInfo {
~ StorageUsed storageUsed
~ long lastPaid
~ BigInteger duePayment
+ Cell toCell()
+ {static} StorageInfo deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams19 {
~ long globalId
+ Cell toCell()
+ {static} ConfigParams19 deserialize(CellSlice)
}


interface org.ton.java.tlb.types.IntermediateAddress {
~ Cell toCell()
~ {static} IntermediateAddress deserialize(CellSlice)
}

interface org.ton.java.tlb.types.ConsensusConfig {
~ Cell toCell()
~ {static} ConsensusConfig deserialize(CellSlice)
}

class org.ton.java.tlb.types.FutureSplitMerge {
~ int flag
~ long splitUTime
~ long mergeUTime
~ long interval
+ Cell toCell()
+ {static} FutureSplitMerge deserialize(CellSlice)
}


class org.ton.java.tlb.types.OutMsgTr {
~ int magic
~ MsgEnvelope outMsg
~ InMsg imported
+ Cell toCell()
+ {static} OutMsgTr deserialize(CellSlice)
}


interface org.ton.java.tlb.types.CommonMsgInfo {
~ Cell toCell()
~ {static} CommonMsgInfo deserialize(CellSlice)
}

class org.ton.java.tlb.types.MsgForwardPrices {
~ int magic
~ BigInteger lumpPrice
~ BigInteger bitPrice
~ BigInteger cellPrice
~ long ihrPriceFactor
~ int firstFrac
~ int nextFrac
+ Cell toCell()
+ {static} MsgForwardPrices deserialize(CellSlice)
}


class org.ton.java.tlb.types.ActionPhase {
~ boolean success
~ boolean valid
~ boolean noFunds
~ AccStatusChange statusChange
~ BigInteger totalFwdFees
~ BigInteger totalActionFees
~ long resultCode
~ long resultArg
~ long totalActions
~ long specActions
~ long skippedActions
~ long messagesCreated
~ BigInteger actionListHash
~ StorageUsedShort totalMsgSize
- String getActionListHash()
+ Cell toCell()
+ {static} ActionPhase deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams25 {
~ MsgForwardPrices configFwdPrices
+ Cell toCell()
+ {static} ConfigParams25 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ConfigParams22 {
~ BlockLimits configMcBlockLimits
+ Cell toCell()
+ {static} ConfigParams22 deserialize(CellSlice)
}


class org.ton.java.tlb.types.ComputePhaseVMDetails {
~ BigInteger gasUsed
~ BigInteger gasLimit
~ BigInteger gasCredit
~ int mode
~ long exitCode
~ long exitArg
~ long vMSteps
~ BigInteger vMInitStateHash
~ BigInteger vMFinalStateHash
- String getVmInitStateHash()
- String getVmFinalStateHash()
+ Cell toCell()
+ {static} ComputePhaseVMDetails deserialize(CellSlice)
}




org.ton.java.tlb.types.AccountState <|.. org.ton.java.tlb.types.AccountStateActive
org.ton.java.tlb.types.InMsg <|.. org.ton.java.tlb.types.InMsgImportTr
org.ton.java.tlb.types.InMsg <|.. org.ton.java.tlb.types.InMsgImportIhr
org.ton.java.tlb.types.BouncePhase <|.. org.ton.java.tlb.types.BouncePhaseOk
org.ton.java.tlb.types.ValidatorDescr <|.. org.ton.java.tlb.types.Validator
org.ton.java.tlb.types.CommonMsgInfoRelaxed <|.. org.ton.java.tlb.types.ExternalMessageOutInfoRelaxed
org.ton.java.tlb.types.InMsg <|.. org.ton.java.tlb.types.InMsgImportFin
org.ton.java.tlb.types.CommonMsgInfoRelaxed <|.. org.ton.java.tlb.types.InternalMessageInfoRelaxed
org.ton.java.tlb.types.InMsg <|.. org.ton.java.tlb.types.InMsgDiscardFin
org.ton.java.tlb.types.CommonMsgInfo <|.. org.ton.java.tlb.types.ExternalMessageInfo
org.ton.java.tlb.types.AccountState <|.. org.ton.java.tlb.types.AccountStateFrozen
org.ton.java.tlb.types.MsgAddressExt <|.. org.ton.java.tlb.types.MsgAddressExtNone
org.ton.java.tlb.types.BlockCreateStats <|.. org.ton.java.tlb.types.BlockCreateStatsOrdinary
org.ton.java.tlb.types.MsgAddress <|-- org.ton.java.tlb.types.MsgAddressExt
org.ton.java.tlb.types.GasLimitsPrices <|.. org.ton.java.tlb.types.GasLimitsPricesExt
org.ton.java.tlb.types.ComputePhase <|.. org.ton.java.tlb.types.ComputePhaseVM
org.ton.java.tlb.types.CommonMsgInfo <|.. org.ton.java.tlb.types.InternalMessage
org.ton.java.tlb.types.JettonBridgeParams <|.. org.ton.java.tlb.types.JettonBridgeParamsV1
org.ton.java.tlb.types.MsgAddress <|-- org.ton.java.tlb.types.MsgAddressInt
org.ton.java.tlb.types.ConsensusConfig <|.. org.ton.java.tlb.types.ConsensusConfigNew
org.ton.java.tlb.types.MsgAddressInt <|.. org.ton.java.tlb.types.MsgAddressIntStd
org.ton.java.tlb.types.BouncePhase <|.. org.ton.java.tlb.types.BouncePhaseNegFounds
org.ton.java.tlb.types.ValidatorDescr <|.. org.ton.java.tlb.types.ValidatorAddr
org.ton.java.tlb.types.OutMsg <|.. org.ton.java.tlb.types.OutMsgExt
org.ton.java.tlb.types.MsgAddressExt <|.. org.ton.java.tlb.types.MsgAddressExternal
org.ton.java.tlb.types.IntermediateAddress <|.. org.ton.java.tlb.types.IntermediateAddressRegular
org.ton.java.tlb.types.GasLimitsPrices <|.. org.ton.java.tlb.types.GasLimitsPricesOrdinary
org.ton.java.tlb.types.IntermediateAddress <|.. org.ton.java.tlb.types.IntermediateAddressSimple
org.ton.java.tlb.types.SizeLimitsConfig <|.. org.ton.java.tlb.types.SizeLimitsConfigV2
org.ton.java.tlb.types.ConsensusConfig <|.. org.ton.java.tlb.types.ConsensusConfigV4
org.ton.java.tlb.types.OutMsg <|.. org.ton.java.tlb.types.OutMsgDeqShort
org.ton.java.tlb.types.CommonMsgInfo <|.. org.ton.java.tlb.types.ExternalMessageOutInfo
org.ton.java.tlb.types.ComputePhase <|.. org.ton.java.tlb.types.ComputeSkipReason
org.ton.java.tlb.types.OutMsg <|.. org.ton.java.tlb.types.OutMsgTrReq
org.ton.java.tlb.types.OutAction <|.. org.ton.java.tlb.types.ActionReserveCurrency
org.ton.java.tlb.types.WorkchainDescr <|.. org.ton.java.tlb.types.WorkchainDescrV2
org.ton.java.tlb.types.OutMsg <|.. org.ton.java.tlb.types.OutMsgImm
org.ton.java.tlb.types.BlockCreateStats <|.. org.ton.java.tlb.types.BlockCreateStatsExt
org.ton.java.tlb.types.OutAction <|.. org.ton.java.tlb.types.ActionSendMsg
org.ton.java.tlb.types.InMsg <|.. org.ton.java.tlb.types.InMsgImportImm
org.ton.java.tlb.types.OutAction <|.. org.ton.java.tlb.types.ActionSetCode
org.ton.java.tlb.types.OutMsg <|.. org.ton.java.tlb.types.OutMsgNew
org.ton.java.tlb.types.CatchainConfig <|.. org.ton.java.tlb.types.CatchainConfigC2
org.ton.java.tlb.types.AccountState <|.. org.ton.java.tlb.types.AccountStateUninit
org.ton.java.tlb.types.CatchainConfig <|.. org.ton.java.tlb.types.CatchainConfigC1
org.ton.java.tlb.types.WorkchainFormat <|.. org.ton.java.tlb.types.WorkchainFormatExt
org.ton.java.tlb.types.WorkchainFormat <|.. org.ton.java.tlb.types.WorkchainFormatBasic
org.ton.java.tlb.types.BouncePhase <|.. org.ton.java.tlb.types.BouncePhaseNoFounds
org.ton.java.tlb.types.ConsensusConfig <|.. org.ton.java.tlb.types.ConsensusConfigV3
org.ton.java.tlb.types.MsgAddressInt <|.. org.ton.java.tlb.types.MsgAddressIntVar
org.ton.java.tlb.types.OutMsg <|.. org.ton.java.tlb.types.OutMsgDeqImm
org.ton.java.tlb.types.InMsg <|.. org.ton.java.tlb.types.EnqueuedMsg
org.ton.java.tlb.types.ValidatorSet <|.. org.ton.java.tlb.types.Validators
org.ton.java.tlb.types.InMsg <|.. org.ton.java.tlb.types.InMsgDiscardTr
org.ton.java.tlb.types.SizeLimitsConfig <|.. org.ton.java.tlb.types.SizeLimitsConfigV1
org.ton.java.tlb.types.GasLimitsPrices <|.. org.ton.java.tlb.types.GasLimitsPricesPfx
org.ton.java.tlb.types.JettonBridgeParams <|.. org.ton.java.tlb.types.JettonBridgeParamsV2
org.ton.java.tlb.types.InMsg <|.. org.ton.java.tlb.types.InMsgImportExt
org.ton.java.tlb.types.WorkchainDescr <|.. org.ton.java.tlb.types.WorkchainDescrV1
org.ton.java.tlb.types.ConsensusConfig <|.. org.ton.java.tlb.types.ConsensusConfigV1
org.ton.java.tlb.types.IntermediateAddress <|.. org.ton.java.tlb.types.IntermediateAddressExt
org.ton.java.tlb.types.ValidatorSet <|.. org.ton.java.tlb.types.ValidatorsExt
org.ton.java.tlb.types.OutMsg <|.. org.ton.java.tlb.types.OutMsgDeq
org.ton.java.tlb.types.OutMsg <|.. org.ton.java.tlb.types.OutMsgTr
@enduml